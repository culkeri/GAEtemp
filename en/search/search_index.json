{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Welcome to the DAS-GAE Guide","text":"<p>The DAS Geospatial Analytics Environment (DAS-GAE) offers a collaborative cross-workspace environment that provides data analysts and scientists with access to trusted spatial data, tools, and services for geospatial processing, analysis, and visualization. <p> credit: ESRI inc.</p> </p> <p>With DAS-GAE, you have the power to perform analytics through geomatics and location-based tools, all within a secure, cloud-based environment. Here's what you can do:  </p> <p>     Using these secure, cloud-based services, you can:  <ul> <li>Access Azure Windows Virtual Machines, which offer highly-powerful and scalable geospatial processing and analysis (above and beyond AVD).</li> <li>Perform basic and advanced analysis, modeling, and create workflows using tools like ArcGIS Pro, QGIS, and/or ESRI Insights.</li> <li>Utilize collaborative storage to easily access geospatial data from various repositories.</li> <li>Gain valuable location-based insights by integrating trusted statistics from Statistics Canada with geospatial data.</li> <li>Use ESRI Enterprise Collaborative geospatial analytics and visualization platform to:     <ul> <li>Create interactive geospatial visuals, stories, and dashboards.</li> <li>Share geospatial datasets, models, analysis, and web mapping applications.</li> <li>Allow for cross-platform and cross-project collaboration.</li> </ul> </li> </ul> </p> <p></p> <p>Learn More: Data Analytics Services; Powered by Statistics Canada</p>"},{"location":"analysis_ov/","title":"Overview","text":""},{"location":"analysis_ov/#what-is-geospatial-analysis","title":"What is Geospatial Analysis?","text":"<p>Geospatial analysis is the process of analyzing and interpreting data that has a geographic component. It involves studying maps, satellite imagery, and other spatial data to uncover patterns and insights related to specific locations. It helps in understanding how location impacts various phenomena and supports decision-making in fields like urban planning, environmental management, and disaster response.</p>"},{"location":"analysis_ov/#whats-available-on-das-gae","title":"What's available on DAS-GAE?","text":"Software Summary Ease of Use ArcGIS Pro ArcGIS Pro is a professional GIS software that provides advanced geospatial analysis tools, visualization capabilities, and data management features. $Note: This product requires a licence.  Ideal for: Geospatial Analysis, Static Map Creation Easy + QGIS QGIS (Quantum GIS) is an open-source GIS software that offers extensive geospatial analysis tools, including spatial query, analysis, and mapping functions. Ideal for: Geospatial Analysis, Static Map Creation Easy + ArcGIS Enterprise ArcGIS Enterprise is a complete GIS portal, providing a web-based infrastructure for hosting and sharing GIS services and applications. Simple analysis can also be done in the portal.  Usually, eEnterprise/Portal is used conjunction with ArcGIS Pro. $Note: This product has a license recovery fee  Ideal for: Basic Analysis, Web-Maps, Building Apps Easy + ArcGIS Insights ArcGIS Insights is a data analytics software that integrates spatial and non-spatial data for exploratory analysis, data visualization, and advanced analytics. $Note: This product has a license recovery fee.  Ideal for: Geospatial Analysis Moderate + VSCode VSCode (Visual Studio Code) is a code editor that supports various programming languages and geospatial data. A good option for development of Scripts, Models and Machine learning methods.  Ideal for: Analysis by code, Models, Integration Moderate + PyCharm PyCharm is an integrated development environment (IDE) specifically designed for Python, offering tools for coding, debugging, and working with geospatial libraries. A good option for development of Python Scripts and re-usable Models.  Ideal for: Analysis by code, Models, Integration Moderate + Jupyter Notebooks Jupyter Notebooks provide an interactive computing environment for creating and sharing documents that combine code, visualizations, and narrative text. Notebooks are a great option for 'new' coders.  Ideal for: Analysis by code, Models, Integration Easy + Databricks Databricks is a unified analytics platform that enables collaborative and scalable data processing and analysis, including geospatial data exploration and workflows. This feature is still being explored and therefore may have limited functionality at this time. Ideal for: Analysis by code, Complex Models, Distributed Processing Moderate + PostgreSQL+PostGIS PostGIS (extension for PostgreSQL), enables you to perform spatial queries, geometric operations, spatial joins, and network analysis, making it a robust tool for geospatial analysis tasks.  Ideal for: Advanced analysis, processing and storage  Moderate + Miniforge Miniforge is a Python package manager and lightweight distribution focused on scientific computing and data analysis.  Ideal for: Python package/environment management Easy +"},{"location":"arcgisApps/","title":"Build and Share Spatial-Apps","text":"Before you begin: ArcGIS Portal Intro <p>To create a web map in Portal, start by self-registering for an Enterprise account and then publishing data into the Portal.  For detailed instructions, refer to this page which provides a complete step-by-step guide: GAE Storage- ArcGIS Portal </p> <p>ArcGIS Enterprise offers a range of no-code apps that allow users to create and share interactive geospatial applications without coding skills. </p> <p>Both Apps and Sites are made from your published data-layers and maps.  The first step to creating an App/Site is to have you analysis completed, and all your layers and maps published.   </p> <p>Data goes into Layers;</p> <p>Layers go into Maps;</p> <p>Maps and Layers go into Apps;</p> <p>Maps and Apps go into Sites (data can be downloaded from Sites). </p>"},{"location":"arcgisApps/#no-code-apps","title":"No-Code Apps","text":"<p>These Apps enhance data visualization, and support data-driven decision-making. </p> Creating Interactive Apps <p>To create an app, navigate to the Content tab in the main ribbon and click My Content.  There is a Create app button that will allow you to work with different types of interactive apps. </p> <p></p> <ol> <li> <p>Instant Apps: Enables quick building and configuration of templated web apps with streamlined and customizable options.</p> </li> <li> <p>Experience Builder: Build and create engaging app experiences by combining maps, media, and other content with customizable layouts and themes.</p> </li> <li> <p>StoryMaps: Create narrative-driven stories by combining maps, text, images, and multimedia to engage and inform the audience.</p> </li> <li> <p>Dashboards: Visualize real-time data with dynamic charts, maps, and gauges to monitor key performance indicators and communicate insights effectively.</p> </li> <li> <p>Web AppBuilder : Build web applications by configuring pre-built widgets and templates, with a drag-and-drop interface.</p> <p> AppBuilder as part of ArcGIS Enterprise is considered deprecated. Although still available, users should switch to Experience Builder moving forward</p> </li> <li> <p>Configurable Apps :  Build web apps from your web maps, scenes, and groups without having to write code</p> <p> Configurable Apps as although still available in Enterprise, uses JavaScript 3.x and should be avoided, Instant Apps is better</p> </li> </ol> <p>Learn More: Get started with apps\u2014Portal for ArcGIS | Documentation for ArcGIS Enterprise</p>"},{"location":"arcgisApps/#no-code-sitespages","title":"No-Code Sites/Pages","text":"<p>Sites enables users to create interactive web pages and websites without coding, showcasing maps, data, and multimedia content with customizable templates and seamless integration.</p> What is an Enterprise Site? <p>ArcGIS Enterprise Sites allows you to create a tailored web page experience to help you share your GIS products to others  more easily, even if they are not used to working in your GIS. Instead of learning to navigate the portal and access groups, consumers can go directly to the custom web page you create to navigate the content relevant to them.  Consumers will require a Viewer role.</p> <p>Sites features a built-in web page designer that integrates a drag-and-drop experience with HTML markup, giving you absolute control over the design of the web pages you create. You can also add non-GIS content, such as videos and documents, to your Site to create a central place for material relevant to your users to be hosted and accessed.</p> <p>Users more familiar with ArGIS Online deployment/portal will known this feature as Hubs</p> Creating an Enterprise Site <p>To Begin:</p> <p>To request (initialize) a Site, contact the DAS-GAE team via the Jira Board.  How to submit a technical request or report a problem. </p> <p>Please include what you would prefer the URL to be.  The URL will be formatted as:     <code>https://geoanalytics.cloud.statcan.ca/portal/apps/sites/#/{YOUR_CHOSEN_URL}</code></p> <p>Along with your Site, 2 groups will be created.  One for editors, and one for viewers only.  These groups will control who has access to your site, and which items they can interact with.</p> <p>Once your site is initialized:</p> <ol> <li>Access the ArcGIS Sites application.</li> <li>Choose a template or layout that suits your needs.</li> <li>Customize the site by adding maps, data, multimedia content, and text.</li> <li> <p>Configure the appearance of the site by selecting colors, fonts, and branding elements.</p> <p>ESRI leverages a custom theme and build of the Bootstrap(3) system for page design. Knowledgeable users who want to use custom HTML in the SiteApp should reference this resource: Calcite Bootstrap Theme by ESRI</p> </li> <li> <p>Embed additional ArcGIS content such as maps, apps, and dashboards if desired.</p> </li> <li>Preview and review the site to ensure it meets your requirements.</li> <li>Publish the site to make it accessible to others.</li> <li>Share the site URL or embed it on other web pages to reach your intended audience.</li> </ol>"},{"location":"arcgisApps/#working-with-multiple-versions-dev-prod","title":"Working with Multiple Versions (DEV-PROD)","text":"<p>Creating separate test and production workspaces can provide significant benefits to project, including improving their development processes, reducing risk, and enhancing the reliability and security of their systems. </p> <p>However, physical separation of dev-test-prod workspaces is not feasible on DAS. Nonetheless, GAE can help by creating separate groups that emulate separate workspaces. Since each project has unique needs, there is no one-size-fits-all solution. </p> Typical process flow <p></p> <p>If you are using an ArcGIS Site to share your app, the workflow will typically look like this:</p> <p> </p> <p>Users can use the ArcGIS Online Assistant to repair/relink layers and maps as needed.  See the next section for advice on using the tool.  It is essential to follow best practices, especially in naming and data organization when working with multiple workspaces.</p> Replacing a layer within an Web Map <p>There may be a scenario where you want to replace a layer in a map with an updated version or a replacement dataset.  There are several ways to accomplish this, one of the easier methods is using the ArcGIS Online Assistant</p> Proceed with Caution! <p>Changing a layer in an existing map may have unintended consequences. App Widgets and controls linked to the map might break and need to be reconfigured.  Ensuring layer names and table headers match old versions will help keep compatibility, but there is no guarantee. Risks include: Corrupting content, losing access to items, breaking apps built ontop of the map.</p> <ol> <li> <p>Log in to Portal for ArgGIS </p> </li> <li> <p>Enter the Portal URL https://geoanalytics.cloud.statcan.ca/portal ,and, your APP ID (API Key) from the ArcGIS Portal </p> </li> <li> <p>A pop-up window will appear, select StatCan Azure Cloud Login </p> </li> <li> <p>In the Assistant Home page, Select the folder where you map is saved on the Portal </p> </li> <li> <p>Select I want to, then Update the URLs of Services in a Web Map </p> </li> </ol> <p>6.In the Find file, enter the URL of the old layer you want to replace.  In replace enter the new URL. Scroll down and select Update Then wait for the Success message.  </p> Where to find the Feature Service URL <p>The URL Can be found in the Portal, on the Feature Services Overview Page:</p> <p></p> <p>The data in your map will now reflect the new service.  You will may need to adjust the Name of the layer on your map, as it will reflect the origina layer.</p> <p>For those who prefer to do things via Python API; follow these instructions provided by ESRI</p> Replacing a Web Map within a Web App Proceed with Caution! <p>Changing a map in an existing web app may have unintended consequences. Widgets and controls might break and need to be reconfigured.  Ensuring layer names and table headers match old versions will help keep compatibility, but there is no guarantee.  DAS-GAE recommends experimenting on a demo/copied app first.  Risks include: Corrupting content, losing access to items, breaking apps built ontop of the map.</p> <p>There may be a scenario where you want to replace a web map with a new map in an already built web app.  We will walk you through how to do this using the AGO Assistant.  We will use the same ArcGIS Online Assistant tool as above, but with a different workflow.</p> <ol> <li> <p>Log in to Portal for ArgGIS </p> </li> <li> <p>Enter the Portal URL https://geoanalytics.cloud.statcan.ca/portal ,and, your APP ID (API Key) from the ArcGIS Portal </p> </li> <li> <p>A pop-up window will appear, select StatCan Azure Cloud Login </p> </li> <li> <p>In the Assistant Home page, Select the folder where you map is saved on the Portal </p> </li> <li> <p>From the I want to... button, select View an Item's JSON, then select the desired app from the highlighted list.  The JSON data will appear on the right. </p> </li> <li> <p>Scroll down on the JSON data pane, to the Data category, and Select the Edit icon.  The data tile will turn to dark-mode, signifying it is in edit mode. </p> </li> <li> <p>In the data tile, locate the map attribute, and replace the itemID field with the new maps ID.  </p> How to find a Map Id <p>The Map Id can be obtained by visiting the Map's overview page, and copying it from the URL </p> </li> <li> <p>Scroll up to the beginning of the data tile and select Save. Confirm the changes in your app, and reconfigure widgets as needed.  </p> </li> </ol> Cloning with the API Proceed with Caution: CLONE vs COPY <p>This clone method does not always work.  Some dataset, layers, items, etc, will be COPIED instead of CLONED. Copies reference back to the original item, pay close attention to the items ID.  It will NOT work for 'map image layers'.</p> <pre><code># Connect to the source portal\nsource_gis = GIS(\"https://geoanalytics.cloud.statcan.ca/portal\", client_id='')\n# Connect to the destination portal\ntarget_gis = GIS(\"https://geoanalytics.cloud.statcan.ca/portal\",client_id='')\n# Get source content\nitem_id = source_gis.content.get(\"#################\")\n# Clone the item to the target portal\ncloned_item = target_gis.content.clone_items(items=[item_id], copy_data=True)\n</code></pre>"},{"location":"arcgisMaps/","title":"ArcGIS Maps","text":""},{"location":"arcgisMaps/#arcgis-pro-static-maps-overview","title":"ArcGIS Pro Static Maps Overview","text":"<p>In ArcGIS Pro, you can create static maps by exporting the current view or layout to a static image format, such as PNG, JPEG, or TIFF. This allows you to capture and save a snapshot of the map display without the need for interactive functionality. Here's how you can generate static maps in ArcGIS Pro:</p> View-based static maps <p>To create a static map based on the current view in the map window, follow these steps:</p> <ol> <li>Navigate to the desired extent, zoom level, and map layers in the map window.</li> <li>Go to the \"Share\" tab in the ribbon.</li> <li>Click on the \"Map\" button in the \"Export\" group. </li> <li>Specify the export settings, such as image format, resolution, output location, and file name.</li> <li>Click \"Export\" to generate the static map image based on the current view.</li> </ol>  Layout-based static maps <p>If you have a map layout set up with specific elements, such as title, legend, and scale bar, you can export the layout as a static map using the following steps:</p> <ol> <li>Switch to the \"Layout\" view in ArcGIS Pro. </li> <li>Arrange and design the map elements and components in the layout.</li> <li>Go to the \"Share\" tab in the ribbon.</li> <li>Click on the \"Layout\" button in the \"Export\" group.</li> <li>Specify the export settings, such as image format, resolution, output location, and file name.</li> <li>Click \"Export\" to generate the static map image based on the configured layout.</li> </ol> <p>Adjusting Map Layout</p> <ol> <li>Switch to the Layout view in ArcGIS Pro.</li> <li>Add and position the map frame to define the area where the map will be displayed.</li> <li>Insert additional elements such as titles, legends, scale bars, north arrows, and other annotations as needed.</li> <li>Use the layout tools to align and arrange the map elements for a visually pleasing composition.</li> <li>Adjust the size and position of the elements to create a balanced and organized layout.</li> </ol> <p>ArcGIS Pro offers more advanced capabilities such as customizing symbology, labeling, and other cartographic elements. You can leverage the styling options to create visually appealing and informative static maps.</p> Customizing Symbology <ol> <li>Select the desired map layer in the Table of Contents pane.</li> <li>Right-Click to access the Symbology tab in the Layer Properties pane.</li> <li>Choose the appropriate symbology type (e.g., Simple Fill, Unique Values, Graduated Colors).</li> <li>Configure the symbology properties such as color, size, outline, transparency, and other relevant options.</li> <li>Preview and refine the symbology until you achieve the desired representation of your data.</li> </ol> Configuring Labels <ol> <li>Select the desired map layer in the Table of Contents pane.</li> <li>Access the Labeling tab in the Layer Properties pane.</li> <li>Enable labeling for the layer and specify the attribute or expression to be used for labeling.</li> <li>Customize the label placement, font styles, and other visual properties.</li> <li>Use advanced options to control label visibility, label priority, and collision avoidance.</li> <li>Preview and fine-tune the labels until they are legible and provide valuable information.</li> </ol>"},{"location":"arcgisMaps/#arcgis-web-maps-overview","title":"ArcGIS Web Maps Overview","text":"<p>Web maps in ArcGIS Portal (Enterprise) enable users to explore, analyze, and share spatial information. By creating web maps, users can organize data layers, customize symbology, and configure interactive behaviors. </p> <p>Features include customizable symbology, layer visibility control, configurable pop-ups, bookmarks for navigation, and collaboration tools. Web maps are powerful tools for analyzing and communicating geospatial information effectively.</p> Before you begin: ArcGIS Portal Intro <p>To create a web map in Portal, start by self-registering for an Enterprise account and then publishing data into the Portal.  For detailed instructions, refer to this page which provides a complete step-by-step guide: GAE Storage- ArcGIS Portal</p> Creating Web Maps <ol> <li> <p>Click the 'Map' tab in the GAE Portal.</p> </li> <li> <p>Click on the \"Add layer\" button to add data layers from various sources, such as your portal content, online services, files, or by searching for available data.</p> </li> <li> <p>Configure Layer Properties: Once you have added the data layers, you can configure their properties, such as symbology, labeling, and pop-ups, to customize their appearance and behavior on the map.</p> </li> <li> <p>Perform Map Styling: Use the available tools and options in the Map Viewer to style and enhance your map. This includes changing basemaps, adjusting the extent and scale, setting the map layout, and applying other cartographic elements.</p> </li> <li> <p>Add Additional Elements: Enhance your map by adding additional elements such as legends, scale bars, north arrows, titles, or text annotations. These can be inserted using the Map Viewer's interface.</p> </li> <li> <p>Save and Share: Once you are satisfied with your map, save it in your ArcGIS Enterprise portal. Give it a meaningful name and provide any necessary tags or descriptions. You can also choose to share the map with specific individuals or groups within your organization or make it publicly accessible.</p> </li> </ol> <p>Learn More about WebMaps:  Get started with Map Viewer\u2014Portal for ArcGIS | Documentation for ArcGIS Enterprise</p>"},{"location":"arcgisPortal/","title":"ArcGIS Portal","text":""},{"location":"arcgisPortal/#becoming-a-user","title":"Becoming a User","text":"Register and Create Account <ol> <li> <p>Visit DAaaS GAE Enterprise Portal to sign on to the ArcGIS Enterprise Portal</p> </li> <li> <p>Select the StatCan Azure Login button</p> <p></p> </li> <li> <p>If your password was not remembered by Azure you will be asked to enter it and verify by phone</p> <p> </p> </li> <li> <p>You will then be presented with this screen:     </p> </li> <li> <p>For security reasons, your default role will be Viewer Only. Contact the DAaaS Geo Team to have your permissions adjusted. See the Contact section for help on how to contact DAS-GAE</p> </li> </ol> About User Roles <p>You will be assigned either a Project Viewer or Project Member user role depending on your needs. </p> <ul> <li> <p>Project Viewer   View items such as maps, apps, scenes, and layers that have been shared with the public, the organization, or a group to which the member belongs. Join groups owned by the organization. Drag CSV, text, or GPX files into Map Viewer Classic (formerly Map Viewer) to geocode addresses or place names. Get directions in a map viewer and apps. Members assigned the Viewer role cannot create or share content, or perform analysis.</p> </li> <li> <p>Project Member   Project Viewer privileges plus the ability to create, update and delete their own content. Users can publish hosted feature layers, hosted tile layers, hosted scene layers, and server-based layers. Share content to assigned groups. Create content such as Maps (including feature analysis tasks), Dashboards, Apps, and Story Maps.  </p> </li> </ul> About Your Groups <p>The groups you belong to are where you can collaborate with other users on the same project or team. In the main header, click Groups. This is where you can see the groups you have been added to.   Click on the group name to see all the shared content.</p> <p>You may notice there are two groups for the same project. These two groups cater to different user roles, ensuring efficient collaboration and controlled access to data within the ArcGIS portal.</p> <p>The first group, Editors is designated for members who have editing privileges. This means they are granted the ability to modify and update the items within the group. They can add, edit, or delete content, as well as make changes to existing items. </p> <p>The second group, Viewers is a view-only group. Its members have restricted permissions and are limited to viewing the items available in the group. They can explore and access the content, but they do not possess the authority to make any alterations or edits. </p>"},{"location":"arcgisPortal/#uploadingpublishing-content","title":"Uploading/Publishing Content","text":"Uploading from ArcGIS Pro <p>Please refer to this section:ArcGIS Pro- Sharing Results</p> Uploading Content using Portal Interface <p>Shapefiles and File Geodatabases are the most common files that will be uploaded to the Portal. However a full list of supported items can be found by clicking the question mark as seen in the figure below.</p> <p>Click the Content tab and under My Content, click Add Item. Select From your computer. Select Choose File and navigate to the zipped folder of the content you want to upload. Ensure the correct file types is selected from the drop down menu and Publish this file as a hosted layer is selected. Assign the content a title and tags. Click Add Item.</p> <p>Note: Selecting Publish this file as a hosted layer will also publish the content as a hosted layer that can be used and shared between your group members. If the option is not selected, then the file itself (ex. File Geodatabase) will be uploaded and available for download by other group members but not useable by group members until it has been published as a hosted layer.  </p> <p>Similar steps can be followed to upload content via a URL to a layer or document on the web, or a URL to an application on the web.</p> <p>Content can also be uploaded directly to a Web Map using the same means as outlined above. </p> <p>Learn More: ArcGIS Portal; Add Items</p> Publishing Content- Portal Upload <ol> <li>Items can be published directly from your files as seen in the Uploading Content section. </li> <li>If the item file is directly uploaded to the portal such as a shapefile or geodatabase, the user can manually publish the item  </li> <li>Items can also be directly imported into a Web Map (see Web Map section for more information) and published to the portal individually. </li> </ol> <p>Learn More: ArcGIS Portal; Publishing</p> Via API <p>Your project group will be provided with a Client ID upon onboarding which will be used to connect to the ArcGIS Enterprise Portal. Paste the Client ID in-between the quotations. </p> Best Practices <ul> <li> <p>Items should only be shared to your group. Do not share to the enterprise or public level.</p> </li> <li> <p>Use many appropriate tags - this is how most people will find your work. </p> </li> <li> <p>Use common tags for items that are related.</p> </li> <li> <p>Organize content: Use a structured and logical system to organize content in the portal. This can include creating folders, groups, and categories to make it easier for users to find and access content.</p> </li> <li> <p>Use metadata: Include comprehensive metadata for all items in the portal to make it easier for users to discover, understand, and use the content</p> </li> <li> <p>Use a Naming Convention</p> <ul> <li>Use Semantic Versioning<ul> <li>A three-part version number (Major.Minor.Patch)</li> <li>ex: My Map v1.2.4,  EV_Viewer_App DEV v0.0.2</li> <li>add a Last Updated: attribute to the details in the item's overview page </li> </ul> </li> </ul> </li> </ul>"},{"location":"arcgisPortal/#connecting","title":"Connecting","text":"<p><pre><code>    gis = GIS(\"https://geoanalyticsdev.cloud.statcan.ca/portal\", client_id=' ')\nprint(\"Successfully logged in as: \" + gis.properties.user.username)\n</code></pre> The output will redirect you to a web page where you can login to the Portal using the StatCan Azure Login option. After successful login, you will recive a code to sign in using SAML. Paste this code into the output. </p> <p></p>"},{"location":"arcgisPortal/#uploading-content","title":"Uploading Content","text":"<p>```python     # Define the path to the file you want to upload     file_path = \"/path/to/your/file\"</p> <pre><code># Upload the file to your ArcGIS Enterprise instance\nitem_properties = {\"title\": \"My Uploaded File\", \"tags\": \"file, upload\"} # replace with your desired item properties\nitem = gis.content.add(item_properties, data=file_path)\n\n# Print out the URL of the uploaded item\nprint(\"Uploaded item URL: {}\".format(item.url))\n```\n\n[Learn More about the API; ESRI Documentation](https://developers.arcgis.com/python/)\n</code></pre>"},{"location":"conda/","title":"Conda","text":""},{"location":"conda/#jupyter-notebooks","title":"Jupyter Notebooks","text":"<p>Jupyter Notebooks provide a powerful and interactive environment for geospatial analysis. With Jupyter Notebooks, users can combine code, visualizations, and explanatory text in a single document. This allows for a seamless workflow where users can explore, analyze, and visualize geospatial data using Python or other programming languages. Jupyter Notebooks are particularly useful for iterative analysis, as they enable users to run and modify code cells in a flexible and interactive manner.</p>"},{"location":"conda/#pycharm","title":"PyCharm","text":"<p>PyCharm is an integrated development environment (IDE) specifically designed for Python development. Geospatial analysts can utilize PyCharm to efficiently write, debug, and test their geospatial analysis scripts and applications. PyCharm provides a feature-rich environment with advanced code editing capabilities, such as code completion, syntax highlighting, and code navigation, which enhance productivity. PyCharm's debugging and profiling tools assist in identifying and resolving issues, ensuring the reliability of geospatial analysis workflows.</p>"},{"location":"conda/#visual-studio-code-vscode","title":"Visual Studio Code (VSCode)","text":"<p>Visual Studio Code, often referred to as VSCode, is a lightweight and versatile code editor that supports various programming languages, including Python. VSCode also offers a flexible and customizable user interface, allowing analysts to arrange their workspace according to their preferences. Its integrated terminal and debugging capabilities make it convenient for executing and troubleshooting geospatial analysis scripts.</p>"},{"location":"conda/#python","title":"Python","text":"<p>Geospatial analysis mainly uses Python for several reasons:</p> <ol> <li> <p>Rich ecosystem of geospatial libraries: Python has a vast collection of specialized geospatial libraries such as GeoPandas, Shapely, Fiona, and PySAL, which provide powerful tools for handling geospatial data, performing spatial operations, and conducting advanced geospatial analysis.</p> </li> <li> <p>Integration with other data science and analysis libraries: Python's popularity in the data science community and its extensive ecosystem of data analysis libraries such as NumPy, Pandas, and Matplotlib make it an ideal choice for geospatial analysis. Python allows seamless integration of geospatial analysis with other data processing and visualization tasks.</p> </li> <li> <p>Flexibility and versatility: Python is a versatile programming language known for its flexibility. It allows users to combine geospatial analysis with other functionalities, such as machine learning, statistical analysis, and web development. Python's flexibility enables the creation of custom workflows and tailored solutions for specific geospatial analysis needs.</p> </li> <li> <p>Ease of use and readability: Python is renowned for its readability and user-friendly syntax. Its clear and concise code structure makes it easier for both beginners and experienced programmers to understand and write geospatial analysis scripts and workflows. Python's readability contributes to better collaboration and maintainability of geospatial projects.</p> </li> <li> <p>Active community support: Python benefits from a large and active community of geospatial analysts, developers, and researchers who contribute to the development and improvement of geospatial libraries and tools. The availability of extensive documentation, tutorials, and online resources makes it easier for users to learn, troubleshoot, and get assistance when working on geospatial analysis projects.</p> </li> </ol> <p>While Python is widely used in geospatial analysis, it is important to note that other programming languages like R, Java, and C++ also have their own geospatial libraries and ecosystems. The choice of programming language ultimately depends on specific project requirements, personal preferences, and existing expertise.</p>"},{"location":"conda/#virtual-environments","title":"Virtual Environments","text":"Best Practice: Working with Conda Virtual Environments <p>Using virtual environments with Conda can help you create consistent, reproducible, and isolated environments for your projects, which can save time and prevent issues caused by conflicting dependencies or system-level changes.</p> <p>For example, ArcGIS products function best with python 3.7.  By creating a separate ArcGIS environment you can install 3.7 without causing conflicts with the modern python 3.10 release.</p> Create a new environment <p><pre><code>conda create --name &lt;env_name&gt; &lt;package&gt;\n</code></pre> example: <pre><code>conda create --n geoENV python=3.7\n</code></pre></p> Activate your environment <pre><code>conda activate &lt;env_name&gt;\n</code></pre>"},{"location":"conda/#installing-packages","title":"Installing package(s)","text":"Common Geo-Specific Packages available <p>This list is not exhaustive, but here are some of the common packages:</p> <pre><code>- GeoPandas\n- Shapely\n- Fiona\n- GDAL/OGR\n- PyProj\n- Cartopy\n- Rasterio\n- Geoplot\n- Basemap\n- Bokeh\n- PySAL\n- Spatial Pandas\n- NetworkX\n- PyShp\n- TileStache\n- GdalUtils\n- Scipy\n- PyTopo\n- Geopy\n- Plotly\n</code></pre> Conda <p>DAaaS utilizes Artifactory for package and library management: <pre><code>https://jfrog.aaw.cloud.statcan.ca/artifactory/conda-forge-remote\n</code></pre></p> <p>To use:</p> <p>Miniforge (conda) has been preconfigured to use the DAS Artifactiry. You should not need to specify the channel.  If this fails, we have included examples on direct connections after the simple examples:</p> <pre><code>conda install [package]\n</code></pre> <p>For specific versions <pre><code>conda install geopandas\nconda install matplotlib=3.7.0\n</code></pre></p> <p>Connecting directly to the artifactory channel:</p> <pre><code>conda install -c https://jfrog.aaw.cloud.statcan.ca/artifactory/conda-forge-remote/ [package]\nconda install -c https://jfrog.aaw.cloud.statcan.ca/artifactory/conda-forge-remote/ [package=X.X...]\n</code></pre> <p>Confirm your package installation <pre><code>conda list\n</code></pre></p> Conda Cheat Sheet <p></p> <p>Link to full Conda cheat sheet</p> PIP <p>PIP has also been preconfigured to use the DAS artifactory custom index:</p> <pre><code>pip install [package] \n</code></pre> <pre><code>pip list\n</code></pre> <p>If that fails and you need to specify the index url:</p> <pre><code>pip install --index-url https://jfrog.aaw.cloud.statcan.ca/artifactory/api/pypi/pypi-remote/simple &lt;package-name&gt;\n</code></pre>"},{"location":"conda/#some-basic-examples","title":"Some Basic Examples","text":"Connect to GAE ArcGIS Portal (Enterprise) <p>Your project group will be provided with a Client ID upon onboarding which will be used to connect to the ArcGIS Enterprise Portal. Paste the Client ID in-between the quotations <pre><code>from arcgis.gis import GIS\ngis = GIS(\"https://geoanalyticsdev.cloud.statcan.ca/portal\", client_id=' ')\nprint(\"Successfully logged in as: \" + gis.properties.user.username)\n</code></pre> This will trigger a pop-up window  to authenticate, then provide you with a key to enter into the IDE</p> Convert a WFS into pandas DataFrame <pre><code>import geopandas as gpd\n# Set WFS URL and layer name\nwfs_url = 'https://mywfs.com/wfs'\nlayer_name = 'my_layer'\n# Read WFS into a geopandas dataframe\ngdf = gpd.read_file(wfs_url, layer=layer_name)\n# Convert geopandas dataframe to pandas dataframe\ndf = gdf.drop(columns='geometry')\n# Preview the dataframe\nprint(df.head())\n</code></pre> Shapefile to GeoDataFrame (Spatial DataFrame) <pre><code>import geopandas as gpd\n# Define the path to the shapefile\nshapefile_path = 'path/to/your/shapefile.shp'\n# Use geopandas to read the shapefile into a GeoDataFrame\ngdf = gpd.read_file(shapefile_path)\n# Print the GeoDataFrame\nprint(gdf)\n</code></pre> Export a GeoDataFrame to ArcGIS Enterprise <pre><code>from arcgis.gis import GIS\nimport geopandas as gpd\n# Define the URL of your ArcGIS Enterprise portal\nportal_url = 'https://geoanalytics.cloud.statcan.ca/portal/'\n# Create a connection to your portal\ngis = GIS(portal_url, client_id='')\n# Define the name of the feature layer to be created\nlayer_name = 'your_layer_name'\n# Publish the GeoDataFrame to your portal as a feature layer\nfeature_layer = gis.content.import_data(gdf, title=layer_name)\n# Print the URL of the feature layer\nprint(feature_layer.url)\n</code></pre> Join CSV to SHP(as sdf) then Export to ArcGIS Enterprise <p><pre><code>import pandas as pd\nfrom arcgis.gis import GIS\nfrom arcgis.features import SpatialDataFrame\n# Load the CSV file into a Pandas dataframe\ncsv_df = pd.read_csv('path/to/csv_file.csv')\n# Load the spatial data into a SpatialDataFrame using ArcGIS API for Python\nsdf = SpatialDataFrame.from_featureclass('path/to/spatial_data.shp')\n# Join the CSV dataframe to the spatial dataframe based on a common field\njoined_sdf = sdf.merge(csv_df, on='common_field')\n# Export the joined spatial dataframe to ArcGIS Enterprise using the ArcGIS API for Python\ngis = GIS('https://geoanalytics.cloud.statcan.ca/portal/', client_id='')\njoined_fc = joined_sdf.spatial.to_featureclass(location='path/to/output.gdb', overwrite=True)\njoined_item = gis.content.add({'type': 'Feature Service', 'title': 'Joined Data', 'tags': 'Data'}, data=joined_fc)\njoined_item.publish()\n</code></pre> This code first loads a CSV file into a Pandas dataframe using the pd.read_csv() function. It then loads a spatial dataset into a SpatialDataFrame using the SpatialDataFrame.from_featureclass() method of the ArcGIS API for Python. The two dataframes are then joined based on a common field using the merge() method of the SpatialDataFrame.</p> <p>Finally, the joined SpatialDataFrame is exported to a feature class using the spatial.to_featureclass() method of the SpatialDataFrame, and then published to ArcGIS Enterprise using the gis.content.add() and publish() methods of the ArcGIS API for Python. Note that you will need to replace the example paths and server URL with the actual paths and URL for your data and ArcGIS Enterprise instance.</p> GeoCode a dataframe using OSM API <p><pre><code>import requests\nimport pandas as pd\ndef geocode_address(address):\n\"\"\"\n    Geocode a single address using the OpenStreetMap API\n    \"\"\"\nurl = \"https://nominatim.openstreetmap.org/search\"\nparams = {\n\"q\": address,\n\"format\": \"json\"\n}\nresponse = requests.get(url, params=params)\nif response.ok:\nresults = response.json()\nif len(results) &gt; 0:\nreturn results[0]\nreturn None\ndef geocode_dataframe(df, address_column):\n\"\"\"\n    Geocode a Pandas dataframe using the OpenStreetMap API\n    \"\"\"\n# Create a new dataframe to store the geocoding results\ngeocoded_df = pd.DataFrame(columns=[\"latitude\", \"longitude\"])\n# Loop through each row in the original dataframe\nfor index, row in df.iterrows():\n# Get the address from the specified column\naddress = row[address_column]\n# Geocode the address using the OpenStreetMap API\nresult = geocode_address(address)\nif result:\n# Add the latitude and longitude to the new dataframe\ngeocoded_df.loc[index] = [result[\"lat\"], result[\"lon\"]]\nelse:\n# If geocoding failed, add NaN values to the new dataframe\ngeocoded_df.loc[index] = [float(\"NaN\"), float(\"NaN\")]\n# Add the new columns to the original dataframe\ndf[\"latitude\"] = geocoded_df[\"latitude\"]\ndf[\"longitude\"] = geocoded_df[\"longitude\"]\nreturn df\n</code></pre> To use this code, simply call the geocode_dataframe function with your Pandas dataframe and the name of the column that contains the address data. This will add two new columns to the dataframe, \"latitude\" and \"longitude\", which contain the geocoded coordinates for each address. Note that this code uses the requests library to make HTTP requests to the OpenStreetMap API, so you'll need to make sure that it's installed in your environment before running the code. At this time, the OSM API is blocked by the firewall</p> Raster Analysis with GDAL <p><pre><code>from osgeo import gdal\nimport numpy as np\n# Open the raster file\nraster_ds = gdal.Open('path/to/raster.tif')\n# Read the raster band into a NumPy array\nraster_band = raster_ds.GetRasterBand(1)\nraster_array = raster_band.ReadAsArray()\n# Perform some analysis on the raster data\n# For example, calculate the mean pixel value\nmean_value = np.mean(raster_array)\n# Print the result\nprint('Mean pixel value: {}'.format(mean_value))\n</code></pre> This code opens a raster file using the gdal.Open() method and reads the first band of the raster into a NumPy array using the ReadAsArray() method of the gdal.Band object. It then performs some analysis on the raster data, in this case calculating the mean pixel value using the np.mean() function from NumPy. Finally, it prints the result to the console.</p> <p>You can modify this code to perform other types of analysis on the raster data, such as calculating the minimum, maximum, or standard deviation of the pixel values, or performing calculations between multiple bands. GDAL provides a wide range of functions and tools for working with raster data, so the possibilities are nearly endless.</p>"},{"location":"conda/#learn-more","title":"Learn More","text":"<p>Learn more about about Artifactory</p> <p>Learn more about Conda</p>"},{"location":"conda/#connecting-to-spatial-data-gae-enterprise-portal","title":"Connecting to Spatial Data - GAE Enterprise Portal","text":"<p>The ArcGIS Enterprise Portal can be accessed in either the AAW or CAE using the API, from any service which leverages the Python programming language. </p> <p>For example, in AAW and the use of Jupyter Notebooks within the space, or in CAE the use of Databricks, DataFactory, etc.</p> Connecting to GAE Portal using ArcGIS API <ol> <li> <p>Install packages:</p> <pre><code>conda install -c esri arcgis\n</code></pre> <p>or using Artifactory</p> <pre><code>conda install -c https://jfrog.aaw.cloud.statcan.ca/artifactory/api/conda/esri-remote arcgis\n</code></pre> </li> <li> <p>Import the necessary libraries that you will need in the Notebook.     <pre><code>from arcgis.gis import GIS\nfrom arcgis.gis import Item\n</code></pre></p> </li> <li> <p>Access the Portal     Your project group will be provided with a Client ID upon onboarding. Paste the Client ID inbetween the quoatations <code>client_id='######'</code>. </p> <pre><code>gis = GIS(\"https://geoanalytics.cloud.statcan.ca/portal\", client_id=' ')\nprint(\"Successfully logged in as: \" + gis.properties.user.username)\n</code></pre> </li> <li> <ul> <li>The output will redirect you to a login Portal.</li> <li>Use the StatCan Azure Login option, and your Cloud ID </li> <li>After successful login, you will receive a code to sign in using SAML. </li> <li>Paste this code into the output. </li> </ul> <p></p> </li> </ol> Search for your Content <p>search() method The search() method is used to retrieve a collection of items that match specific search criteria. It allows you to search for items based on various parameters such as keywords, item types, owners, tags, groups, and more. The search() method returns a list of items that match the specified search criteria. This method is useful when you want to retrieve multiple items that meet certain conditions.</p> <p>There are multiple ways to search for content depending on the amount of metadata you have filled out for your item. Learn more about .search method here </p> Search all of your items in the Portal <pre><code># Get the currently logged-in user\nme = gis.users.me\n# Retrieve all the items owned by the user\nmy_content = me.items()\n# Print the collection of user's items\nmy_content\n</code></pre> Search content by name <pre><code># Search for items by title\nsearch_results = gis.content.search(query=\"Your Title\")\n# Iterate over the search results\nfor item in search_results:\nprint(f\"Title: {item.title}, ID: {item.id}\")\n</code></pre> Search content by tag <pre><code># Search for items by tags\nsearch_results = gis.content.search(query=\"\", tags=\"your_tag\")\n# Iterate over the search results\nfor item in search_results:\nprint(f\"Title: {item.title}, ID: {item.id}\")\n</code></pre> Search content by group <pre><code># Specify the group ID or group name you want to search within\ngroup_id = \"your_group_id_or_name\"\n# Search for items within the specified group\nsearch_results = gis.content.search(query=\"\", inGroup=group_id)\n# Iterate over the search results\nfor item in search_results:\nprint(f\"Title: {item.title}, ID: {item.id}\")\n</code></pre> Get Content (fetch/retrieve) <p>get() method</p> <p>The get() method is used to retrieve a specific item by its unique item ID. You provide the item ID as an argument to the get() method, and it returns the item with that particular ID. This method is useful when you already know the exact item ID and want to retrieve that specific item.</p> <p>The efficent way to retrieve content is by using the items ID: <pre><code># Retrieve a specific item by its ID\nitem_id = \"your_item_id\"\nitem = gis.content.get(item_id)\n</code></pre></p> <p>It is also possible to .get the content from a list created during searching (like above), however, this can become convoluted when conducting multiple searches, just be careful with your syntax. <pre><code>#from list of search results \nitem1 = gis.content.get(my_content[5].id) #[5] = index number of search \ndisplay(item1)\n</code></pre></p>"},{"location":"conda/#working-with-spatial-data","title":"Working with Spatial Data","text":"<p>The choice between ArcGIS and open-source tools for spatial data depends on your specific needs and available resources. ArcGIS offers specialized functionality and support, while open-source tools are free and customizable. Consider your requirements and available expertise to make an informed decision. In some cases, a hybrid approach may be suitable, where you can leverage the strengths of both ArcGIS and open-source tools depending on the task at hand.</p> Convert Feature Service to Spatially Enabled DataFrame (open source) <p>Conversion of an ArcGIS feature layer into a Pandas DataFrame with spatial capabilities using the pd.DataFrame.spatial.from_layer() method. <pre><code>import pandas\n# Get the feature service item\nitem = gis.content.get(item_id)\n# Access the feature layer within the feature service\nfeature_layer = item.layers[0]\n#Convert\nsdf = pd.DataFrame.spatial.from_layer(feature_layer)\n</code></pre></p> Convert Feature Service to GeoDataFrame (open source) <p>Conversion of an ArcGIS feature layer into a Pandas DataFrame with spatial capabilities using the pd.DataFrame.spatial.from_layer() method. <pre><code>import geopandas as gpd\n# Assuming you have the item ID of the feature service\nitem_id = \"your_item_id\"\n# Get the feature service item\nitem = gis.content.get(item_id)\n# Access the feature layer within the feature service\nfeature_layer = item.layers[0]\n# Query the feature layer to retrieve all features\nfeatures = feature_layer.query().features\n# Convert the features to a GeoDataFrame\ngdf = gpd.GeoDataFrame.from_features(features)\n</code></pre></p> Publish a Spatial DataFrame as a Feature Service to GAE Portal <pre><code>#sdf = your spatial dataframe\nitem_properties = {'title': '&lt;title name&gt;', 'tags': '&lt;tag&gt;', 'description': '&lt;this is my item description&gt;'}\npublished_item = gis.content.import_data(sdf, item_properties=item_properties)\npublished_item.publish()\n# Retrieve the item ID and URL of the published feature service\nitem_id = published_item.id\nfeature_service_url = published_item.url\n# Print the item ID and URL\nprint(\"Item ID:\", item_id)\nprint(\"Feature Service URL:\", feature_service_url)\n</code></pre>"},{"location":"conda/#visualize-your-data-on-an-interactive-map","title":"Visualize Your Data on an Interactive Map","text":"<p>To visualize the map widget within different python based tools, you may need to leverage tool-specific display functions and or widgets. For example, in Databricks use the %python magic command to switch to Python mode before creating and displaying the map widget.</p> ArcGIS Map Module <pre><code>from IPython.display import display\n# Retrieve the feature service item\nitem = gis.content.get(\"feature_service_item_id\")\n# Create a map widget\nmap_widget = MapView()\n# Add the feature service layer to the map\nmap_widget.add_layer(item.layers[0])\n# Display the map widget using Databricks-specific display function\ndisplay(map_widget)\n</code></pre> MatplotLib Library <pre><code>import matplotlib.pyplot as plt\n# Convert the spatial dataframe to a GeoDataFrame (if needed)\ngdf = gpd.GeoDataFrame(sdf)\n# Create a figure and axis\nfig, ax = plt.subplots()\n# Plot the GeoDataFrame\ngdf.plot(ax=ax)\n# Display the plot\nplt.show()\n</code></pre> ipyleaflet Library <pre><code>from ipyleaflet import Map, GeoData\n# Assuming you have a GeoDataFrame called 'gdf'\n# Create a map\nm = Map(center=(gdf.geometry.centroid.y.mean(), gdf.geometry.centroid.x.mean()), zoom=10)\n# Create a GeoData layer from the GeoDataFrame\ngeo_data = GeoData(geo_dataframe=gdf)\n# Add the GeoData layer to the map\nm.add_layer(geo_data)\n# Display the map\nm\n</code></pre>"},{"location":"conda/#creating-visuals-in-notebooks-python","title":"Creating Visuals in Notebooks (python)","text":"<p>When creating map visuals in a notebook, you can choose between using the proprietary ArcGIS API for Python, open-source Python libraries like GeoPandas and Matplotlib, or adopting a hybrid approach that combines both. The ArcGIS API offers extensive geospatial capabilities and integration with ArcGIS products, while open-source libraries provide flexibility and community support. The hybrid approach allows you to leverage the strengths of both options based on your specific needs and preferences.</p> Using Open Source Methods <ol> <li>Install the required Python packages for geospatial analysis, such as <code>geopandas</code>, <code>folium</code>, or <code>matplotlib</code>.</li> <li>Import the necessary modules in your Python notebook.</li> <li>Read or import the geospatial data into a suitable data structure.</li> <li>Visualize the data using the chosen package's mapping functions or classes.</li> <li>Customize the map properties, such as colors, symbology, or basemaps.</li> <li>Add additional layers or annotations to the map, if needed.</li> <li>Export the map to a desired format or display it in the notebook.</li> <li>Save the map or share it with others as an image or interactive HTML file.</li> </ol> <p>Example code using <code>geopandas</code> and <code>matplotlib</code>:</p> <pre><code>import geopandas as gpd\nimport matplotlib.pyplot as plt\n# Read the geospatial data\ndata = gpd.read_file(\"path_to_shapefile.shp\")\n# Visualize the data on a map\ndata.plot()\n# Customize the map properties\nplt.title(\"My Geospatial Map\")\nplt.xlabel(\"Longitude\")\nplt.ylabel(\"Latitude\")\n# Export the map\nplt.savefig(\"path_to_output_file.png\", dpi=300)\n# Display the map in the notebook\nplt.show()\n</code></pre> Using ArcGIS API Method <p>Using ArcGIS Paid Product</p> <ol> <li>Import the necessary ArcGIS modules in your Python notebook.</li> <li>Connect to your ArcGIS account or portal using appropriate credentials.</li> <li>Create a map object using the <code>arcgis.mapping</code> module.</li> <li>Add desired layers or data to the map.</li> <li>Customize the map properties, such as extent, scale, and symbology.</li> <li>Optionally, add labels, legends, or other cartographic elements.</li> <li>Export the map to a desired format or display it in the notebook.</li> <li>Save the map or share it with others through the ArcGIS platform.</li> </ol> <p>Example code:</p> <pre><code>import arcpy\nfrom arcgis.gis import GIS\nimport arcgis.mapping as mapping\n# Connect to your ArcGIS account or portal\ngis = GIS(\"https://geoanalyticsdev.cloud.statcan.ca/portal\", client_id=' ')\n# Authentication pop-up will open\n# Create a new map\nmap = mapping.Map()\n# Add layers or data to the map\nmap.add_layer(\"path_to_layer1\")\nmap.add_layer(\"path_to_layer2\")\n# Customize map properties\nmap.zoom_to_layer(\"path_to_layer1\")\nmap.legend = True\n# Export the map\nmap.export(\"path_to_output_file.jpg\", resolution=300)\n# Display the map in the notebook\nmap\n</code></pre> Using ArcPy <ol> <li>Ensure you are using the ArcGIS version of Jupyter notebook for ease of use. Go to Start &gt; ArcGIS &gt; Jupyter Notebook. This will negate the need to modify your system environment and paths.</li> <li>Import the necessary ArcPy modules in your Python notebook.</li> <li>Connect to your ArcGIS account or portal using appropriate credentials.</li> <li>Set the workspace to the location of your geospatial data.</li> <li>Create a map document object using the <code>arcpy.mapping</code> module.</li> <li>Add desired layers or data to the map.</li> <li>Customize the map properties, such as extent, scale, and symbology.</li> <li>Optionally, add labels, legends, or other cartographic elements.</li> <li>Export the map to a desired format or display it in the notebook.</li> <li>Save the map or share it with others through the ArcGIS platform.</li> </ol> <p>Example code:</p> <p><pre><code>import arcpy\nimport arcpy.mapping as mapping\n# Set the workspace to the location of your geospatial data\narcpy.env.workspace = \"path_to_workspace\"\n# Create a new map document\nmxd = mapping.MapDocument()\n# Add layers or data to the map\ndf = mapping.ListDataFrames(mxd)[0]\nlayer1 = mapping.Layer(\"path_to_layer1\")\nlayer2 = mapping.Layer(\"path_to_layer2\")\nmapping.AddLayer(df, layer1)\nmapping.AddLayer(df, layer2)\n# Customize map properties\ndf.zoomToSelectedFeatures()\ndf.legend.title = \"Legend\"\ndf.titleText = \"My Map\"\n# Export the map\nmapping.ExportToJPEG(mxd, \"path_to_output_file.jpg\", resolution=300)\n# Display the map in the notebook\nmxd\n</code></pre> **Learn more about ArcPY</p> <p></p> <p>Common Open Source Visualization packages include:</p> <ul> <li>Matplotlib</li> <li>Seaborn</li> <li>Plotly</li> <li>Folium</li> <li>GeoPandas</li> <li>Bokeh</li> <li>Basemap</li> <li>Cartopy</li> <li>Geoplot</li> <li>PySAL</li> </ul> <p>These libraries provide different levels of functionality and customization options, so you can choose the one that best fits your needs and preferences.</p>"},{"location":"contact/","title":"Contact DAS Customer Success Team","text":"<p>For business and onboarding inquiries, or to receive technical support:</p> <p>statcan.dassupport-soutiendelads.statcan@statcan.gc.ca</p> Internal - Statistics Canada Employees <p>How to submit a technical request or report a problem  For technical support please submit a ticket via Jira:</p> <ol> <li>Open Statistics Canada Jira software: DAS Geospatial Platform (DASGAE)</li> <li>From the Menu Bar, select the button Create:     </li> <li>In the Jira Create Issue Window, Select the Issue Type = Client Support:     </li> <li>In the Jira Create Issue window, enter the information related to your request:<ul> <li>Summary (mandatory): Type a short summary definition of you request</li> <li>Assignee (mandatory): Select \u201cautomatic\u201d</li> <li>Component (mandatory): Select \u201cCustomer Support \u2013 Geo Platform User Help Resources\u201d:     </li> <li>Description (mandatory): Type a detailed description of your request.</li> <li>Attachment (optional): Supporting documentation relating to your request (ex: screen caps of errors)</li> </ul> </li> </ol> <p>DAS Support will complete the rest of information in the jira ticket if necessary.  You will receive updates about the ticket via email. </p> <p>More DAS Contacts:</p> <ul> <li> <p>DAS Portal Homepage</p> </li> <li> <p>Advanced Analytics Workspace (AAW) Guidebook</p> </li> <li> <p>AAW Slack Channel</p> </li> <li> <p>Collaborative Analytics Environment (CAE) Guidebook</p> </li> <li> <p>CAE Slack Channel</p> </li> </ul>"},{"location":"crossplatform/","title":"Leveraging GAE from within AAW or CAE;  Cross-Platform Analysis","text":"What is AAW? <p>The Advanced Analytics Workspace (AAW) provides emerging state-of-the-art open source analytics and artificial intelligence tools, and compute capacity for modern data science workloads.  AAW has a focus on Open Source products and services.</p> What is CAE <p>The Collaborative analytics Environment (CAE) provides cloud services for data ingestion, transformation and preparation, as well as data exploration and computation. It includes tools for collaborative analytics, machine learning environments, and data visualization capabilities.  CAE has a focus on Azure Cloud Native products.</p> Prerequisites <p>1) An onboarded project in both spaces (AAW and/or CAE, AND, GAE) 2) An ArcGIS Portal Client Id (API Key)</p>"},{"location":"crossplatform/#connecting-to-spatial-data-gae-enterprise-portal","title":"Connecting to Spatial Data - GAE Enterprise Portal","text":"<p>The ArcGIS Enterprise Portal can be accessed in either the AAW or CAE using the API, from any service which leverages the Python programming language. </p> <p>For example, in AAW and the use of Jupyter Notebooks within the space, or in CAE the use of Databricks, DataFactory, etc.</p> Connecting to GAE Portal using ArcGIS API <ol> <li> <p>Install packages:</p> <pre><code>conda install -c esri arcgis\n</code></pre> <p>or using Artifactory</p> <pre><code>conda install -c https://jfrog.aaw.cloud.statcan.ca/artifactory/api/conda/esri-remote arcgis\n</code></pre> </li> <li> <p>Import the necessary libraries that you will need in the Notebook.     <pre><code>from arcgis.gis import GIS\nfrom arcgis.gis import Item\n</code></pre></p> </li> <li> <p>Access the Portal     Your project group will be provided with a Client ID upon onboarding. Paste the Client ID inbetween the quoatations <code>client_id='######'</code>. </p> <pre><code>gis = GIS(\"https://geoanalytics.cloud.statcan.ca/portal\", client_id=' ')\nprint(\"Successfully logged in as: \" + gis.properties.user.username)\n</code></pre> </li> <li> <ul> <li>The output will redirect you to a login Portal.</li> <li>Use the StatCan Azure Login option, and your Cloud ID </li> <li>After successful login, you will receive a code to sign in using SAML. </li> <li>Paste this code into the output. </li> </ul> <p></p> </li> </ol> Search for your Content <p>search() method The search() method is used to retrieve a collection of items that match specific search criteria. It allows you to search for items based on various parameters such as keywords, item types, owners, tags, groups, and more. The search() method returns a list of items that match the specified search criteria. This method is useful when you want to retrieve multiple items that meet certain conditions.</p> <p>There are multiple ways to search for content depending on the amount of metadata you have filled out for your item. Learn more about .search method here </p> Search all of your items in the Portal <pre><code># Get the currently logged-in user\nme = gis.users.me\n# Retrieve all the items owned by the user\nmy_content = me.items()\n# Print the collection of user's items\nmy_content\n</code></pre> Search content by name <pre><code># Search for items by title\nsearch_results = gis.content.search(query=\"Your Title\")\n# Iterate over the search results\nfor item in search_results:\nprint(f\"Title: {item.title}, ID: {item.id}\")\n</code></pre> Search content by tag <pre><code># Search for items by tags\nsearch_results = gis.content.search(query=\"\", tags=\"your_tag\")\n# Iterate over the search results\nfor item in search_results:\nprint(f\"Title: {item.title}, ID: {item.id}\")\n</code></pre> Search content by group <pre><code># Specify the group ID or group name you want to search within\ngroup_id = \"your_group_id_or_name\"\n# Search for items within the specified group\nsearch_results = gis.content.search(query=\"\", inGroup=group_id)\n# Iterate over the search results\nfor item in search_results:\nprint(f\"Title: {item.title}, ID: {item.id}\")\n</code></pre> Get Content (fetch/retrieve) <p>get() method</p> <p>The get() method is used to retrieve a specific item by its unique item ID. You provide the item ID as an argument to the get() method, and it returns the item with that particular ID. This method is useful when you already know the exact item ID and want to retrieve that specific item.</p> <p>The efficent way to retrieve content is by using the items ID: <pre><code># Retrieve a specific item by its ID\nitem_id = \"your_item_id\"\nitem = gis.content.get(item_id)\n</code></pre></p> <p>It is also possible to .get the content from a list created during searching (like above), however, this can become convoluted when conducting multiple searches, just be careful with your syntax. <pre><code>#from list of search results \nitem1 = gis.content.get(my_content[5].id) #[5] = index number of search \ndisplay(item1)\n</code></pre></p>"},{"location":"crossplatform/#working-with-spatial-data","title":"Working with Spatial Data","text":"<p>The choice between ArcGIS and open-source tools for spatial data depends on your specific needs and available resources. ArcGIS offers specialized functionality and support, while open-source tools are free and customizable. Consider your requirements and available expertise to make an informed decision. In some cases, a hybrid approach may be suitable, where you can leverage the strengths of both ArcGIS and open-source tools depending on the task at hand.</p> Convert Feature Service to Spatially Enabled DataFrame (open source) <p>Conversion of an ArcGIS feature layer into a Pandas DataFrame with spatial capabilities using the pd.DataFrame.spatial.from_layer() method. <pre><code>import pandas\n# Get the feature service item\nitem = gis.content.get(item_id)\n# Access the feature layer within the feature service\nfeature_layer = item.layers[0]\n#Convert\nsdf = pd.DataFrame.spatial.from_layer(feature_layer)\n</code></pre></p> Convert Feature Service to GeoDataFrame (open source) <p>Conversion of an ArcGIS feature layer into a Pandas DataFrame with spatial capabilities using the pd.DataFrame.spatial.from_layer() method. <pre><code>import geopandas as gpd\n# Assuming you have the item ID of the feature service\nitem_id = \"your_item_id\"\n# Get the feature service item\nitem = gis.content.get(item_id)\n# Access the feature layer within the feature service\nfeature_layer = item.layers[0]\n# Query the feature layer to retrieve all features\nfeatures = feature_layer.query().features\n# Convert the features to a GeoDataFrame\ngdf = gpd.GeoDataFrame.from_features(features)\n</code></pre></p> Publish a Spatial DataFrame as a Feature Service to GAE Portal <pre><code>#sdf = your spatial dataframe\nitem_properties = {'title': '&lt;title name&gt;', 'tags': '&lt;tag&gt;', 'description': '&lt;this is my item description&gt;'}\npublished_item = gis.content.import_data(sdf, item_properties=item_properties)\npublished_item.publish()\n# Retrieve the item ID and URL of the published feature service\nitem_id = published_item.id\nfeature_service_url = published_item.url\n# Print the item ID and URL\nprint(\"Item ID:\", item_id)\nprint(\"Feature Service URL:\", feature_service_url)\n</code></pre>"},{"location":"crossplatform/#visualize-your-data-on-an-interactive-map","title":"Visualize Your Data on an Interactive Map","text":"<p>To visualize the map widget within different python based tools, you may need to leverage tool-specific display functions and or widgets. For example, in Databricks use the %python magic command to switch to Python mode before creating and displaying the map widget.</p> ArcGIS Map Module <pre><code>from IPython.display import display\n# Retrieve the feature service item\nitem = gis.content.get(\"feature_service_item_id\")\n# Create a map widget\nmap_widget = MapView()\n# Add the feature service layer to the map\nmap_widget.add_layer(item.layers[0])\n# Display the map widget using Databricks-specific display function\ndisplay(map_widget)\n</code></pre> MatplotLib Library <pre><code>import matplotlib.pyplot as plt\n# Convert the spatial dataframe to a GeoDataFrame (if needed)\ngdf = gpd.GeoDataFrame(sdf)\n# Create a figure and axis\nfig, ax = plt.subplots()\n# Plot the GeoDataFrame\ngdf.plot(ax=ax)\n# Display the plot\nplt.show()\n</code></pre> ipyleaflet Library <pre><code>from ipyleaflet import Map, GeoData\n# Assuming you have a GeoDataFrame called 'gdf'\n# Create a map\nm = Map(center=(gdf.geometry.centroid.y.mean(), gdf.geometry.centroid.x.mean()), zoom=10)\n# Create a GeoData layer from the GeoDataFrame\ngeo_data = GeoData(geo_dataframe=gdf)\n# Add the GeoData layer to the map\nm.add_layer(geo_data)\n# Display the map\nm\n</code></pre> <p>Learn More about the ArcGIS API for Python: Full documentation for the ArGIS API</p> <p>Learn More about DAS AAW: AAW Help Guide </p> <p>Learn More about DAS CAE: CAE Help Guide </p>"},{"location":"filers/","title":"Field Filers (internal)","text":"<p>This feature is for Internal Users (StatCan Employees) Only.</p>"},{"location":"filers/#mounting-field-filers-as-a-drive","title":"Mounting Field Filers as a Drive","text":"<p>To mount a Field Filer to your DAS VM do the following:</p> <ol> <li> <p>Open Windows File Explorer</p> </li> <li> <p>Paste FieldFiler path into the address bar AND append .statcan.ca to the path</p> <p>\\\\filer03 becomes...  \\\\filer03.statcan.ca </p> </li> <li> <p>Authenticate     Username:  Add stc\\  before your username</p> <p>example:  stc\\namenick </p> <p>Password: your  NetB/OZ  passcode</p> </li> <li> <p>Locate the root folder you are interested in, right click, Map Network Drive     This will mount it as a drive, allowing for direct connections via ArcGIS Pro</p> </li> </ol> Network Lag - When to copy locally <p>Field filers provide a means to transfer data over the cloud network. In cases where there is network lag or it is deemed more efficient, it is recommended to copy the data locally, perform the analysis, and subsequently save the results back to the filer. </p> <p>This approach ensures smoother data handling and processing, while reducing network burden and cloud costs. Field filers works best for analysis if the data is shared in the Hot tier, as this tier is optimized for transactions.</p>"},{"location":"insights/","title":"Insights, Desktop and Portal","text":"This Feature is still under exploration <p>As GAE continues to explore and learn about this product, we are excited about the possibilities it offers to improve our ability to derive insights from data.  </p> <p>With more experience using Insights, we will be able to take advantage of its advanced capabilities and features to better support our work and deliver more value to Canadians.   Learn with us! Share your knowledge!</p> <p>Not loading? : https://www.youtube-nocookie.com/embed/40uI1zel6eo</p>"},{"location":"insights/#information","title":"Information","text":"<p>ArcGIS Insights is a powerful data analysis and visualization tool developed by Esri. ArcGIS Insights is available in two different versions: ArcGIS Insights Desktop and ArcGIS Insights Portal,and, there are some key differences between the two.</p> <p>ArcGIS Insights Desktop is a standalone application. It provides users with a powerful suite of data analysis and visualization tools that can be used to explore data, create maps and charts, and perform complex spatial analysis. Insights Desktop is designed for individual users or small teams who need to analyze data and create reports locally, without relying on a network connection.</p> <p>On the other hand, ArcGIS Insights Portal is a web-based version of the software that is hosted in the cloud. Insights Portal is designed for larger organizations that need to share data and analysis tools across multiple teams or departments. Insights Portal provides users with access to the same powerful data analysis and visualization tools as Insights Desktop, but with the added benefit of a centralized data repository and collaboration features that allow teams to work together on data analysis projects.</p> <p>In summary, both ArcGIS Insights Desktop and ArcGIS Insights Portal are powerful data analysis and visualization tools that offer similar functionality. However, Insights Desktop is designed for individual users or small teams who need to work locally, while Insights Portal is designed for larger organizations that need to share data and analysis tools across multiple teams or departments.</p>"},{"location":"insights/#analysis-examples","title":"Analysis Examples","text":"<p>Here are some examples of data analysis tasks you can perform in ArcGIS Insights:</p> <ul> <li> <p>Spatial Analysis: You can use ArcGIS Insights to perform a wide range of spatial analysis tasks, including spatial clustering, proximity analysis, and more. For example, you can use the \"Find Nearest\" function to find the nearest locations to a given location, or use the \"Spatial Aggregation\" function to aggregate your data by location.</p> </li> <li> <p>Time Series Analysis: You can use ArcGIS Insights to analyze time series data, including trends, seasonality, and more. For example, you can use the \"Time Series Visualization\" card to visualize your time series data, or use the \"Time Series Forecasting\" function to forecast future trends.</p> </li> <li> <p>Statistical Analysis: You can use ArcGIS Insights to perform a wide range of statistical analysis tasks, including hypothesis testing, regression analysis, and more. For example, you can use the \"Correlation Matrix\" card to visualize the correlations between your variables, or use the \"Linear Regression\" function to perform a regression analysis.</p> </li> <li> <p>Data Mining: You can use ArcGIS Insights to perform data mining tasks, including association analysis, clustering, and more. For example, you can use the \"Association Rules\" function to find patterns in your data, or use the \"K-Means Clustering\" function to cluster your data.</p> </li> </ul> <p>Overall, ArcGIS Insights is a powerful data analysis tool that can be used to analyze and visualize a wide range of spatial and non-spatial data. </p>"},{"location":"insights/#instructions","title":"Instructions","text":"<p>Here are some instructions on how to use ArcGIS Insights for data analysis:</p> <ol> <li> <p>Create a New Workbook: To start using ArcGIS Insights, you need to create a new workbook. Click on the \"New Workbook\" button on the Insights homepage, or click on \"File\" &gt; \"New Workbook\" in the top menu. </p> </li> <li> <p>Connect to Data: The next step is to connect to your data. Insights supports a wide range of data sources, including spreadsheets, databases, and ArcGIS Online/Enterprise. Click on \"Connect to Data\" to access your data sources. </p> </li> <li> <p>Create a New Page: Once you have connected to your data, you can start creating pages to analyze and visualize your data. Click on \"New Page\" to create a new page. </p> </li> <li> <p>Drag and Drop Data: To start analyzing your data, drag and drop your data onto the page. Insights will automatically create cards to visualize your data. You can choose from a variety of card types, including maps, charts, tables, and more. </p> </li> <li> <p>Filter and Summarize Data: You can filter and summarize your data by adding filters and summaries to your cards. For example, you can filter your data by date, location, or other attributes, and summarize your data by counting, averaging, or other statistical measures. </p> <p>You can also filter the original dataset: </p> <p>A card filter only affects the card and creates a filtered dataset while the original, unfiltered dataset is still available for use in your analysis. When you apply a filter to a dataset, no new dataset is created. All cards that use the filtered dataset change to include the filter.</p> </li> <li> <p>Create Relationships: Insights allows you to create relationships between your data sources, which can help you analyze and visualize your data more effectively. Click on \"Create Relationship\" to connect your data sources.  </p> </li> <li> <p>Add Insights Analysis: Insights has a wide range of functions that you can use to analyze and manipulate your data. For example, you can use the \"Find Similar Locations\" function to find locations that are similar to a given location, or the \"Add Location Data\" function to add location data to your non-spatial data.  </p> </li> <li> <p>Share Your Results: Once you have analyzed and visualized your data, you can share your results with others. Click on \"Share\" to share your workbook with other Insights users, or export your results to a variety of formats, including PDF, CSV, and more. </p> </li> </ol>"},{"location":"insights/#tips-and-best-practices","title":"Tips and Best Practices","text":"<ul> <li> <p>Save often: Insights does not have an auto-save function.  It is important to save your work frequently, especially after a new dataset or card is created.</p> </li> <li> <p>Plan and organize your data: Before you start analyzing your data in ArcGIS Insights, it's important to plan and organize your data properly. Make sure your data is clean, organized, and in a format that can be easily imported into Insights.</p> </li> <li> <p>Use appropriate visualization techniques: ArcGIS Insights offers a wide range of visualization tools, including charts, graphs, and maps. Choose the right visualization technique for your data, and use color and labeling to make your visuals more effective.</p> </li> <li> <p>Choose the right analysis tools: ArcGIS Insights offers a variety of analysis tools, including spatial analysis, statistical analysis, and predictive modeling. Choose the right tool for your analysis needs, and make sure you understand how to use it effectively.</p> </li> <li> <p>Collaborate with others: ArcGIS Insights makes it easy to collaborate with others on data analysis projects. Use the sharing and collaboration features to work with team members, share data and insights, and get feedback.</p> </li> <li> <p>Document your work: As you work on your analysis projects in ArcGIS Insights, make sure to document your work. Keep track of your data sources, analysis techniques, and findings, and create reports and presentations to share your insights with others.</p> </li> <li> <p>Stay up-to-date: ArcGIS Insights is a powerful tool that is constantly evolving. Make sure to stay up-to-date with new features and updates, and take advantage of online resources, training, and user communities to get the most out of the software.</p> </li> </ul>"},{"location":"insights/#learn-more-about-insights-esri-documentation","title":"Learn More about Insights; ESRI Documentation","text":""},{"location":"intro/","title":"A Simple Introduction to GIS","text":"<p>Geospatial analysis is concerned with the quantitative location of important features, known as phenomena.</p> <p>Geospatial data is data about phenomena that have a location on the surface of the earth. The location may be static (ex- the location of a road, a disaster event, citizens living in poverty), or dynamic (ex- a moving vehicle or pedestrian, the spread of COVID) </p> <p>A GIS (Geospatial Information System) helps us analyze spatial relationships and patterns amongst these phenomena. It is particularly useful for visualizing spatial data and reporting results of analysis.</p> <p>GIS' are composed of both hardware and software components. Due to the large volumes of spatial data and the need to display values on the fly, GIS hardware often have large storage capacities, fast computing speed, and powerful memory. DAS-GAE has been designed meet these users needs.</p>"},{"location":"intro/#why-is-geospatial-analysis-important","title":"Why is Geospatial Analysis important?","text":"<p>Geospatial analysis is conducted to:</p> <ul> <li>Identify spatial patterns and relationships in data.</li> <li>Support decision-making in fields like urban planning, disaster response, and environmental management.</li> <li>Optimize resource allocation and management.</li> <li>Assess and mitigate risks related to natural disasters and public health emergencies.</li> <li>Monitor and analyze environmental changes and impacts.</li> </ul>"},{"location":"intro/#spatial-data","title":"Spatial Data","text":"<p>Spatial data refers to information that has a location or geographic component associated with it. It is data that has a spatial reference, such as latitude and longitude or a street address, that allows it to be displayed on a map and analyzed using geographic information system (GIS) software. Spatial data can be broadly classified into two types: vector data and raster data.</p> <ol> <li> <p>Vector data: Vector data represents geographic features using points, lines, and polygons. Examples of vector data include:</p> <ul> <li>Points: addresses, cities, airports, hospitals, and other discrete locations.</li> <li>Lines: roads, rivers, railroads, and other linear features.</li> <li>Polygons: countries, states, counties, parks, and other areas with well-defined boundaries.</li> </ul> </li> <li> <p>Raster data: Raster data represents geographic features as a grid of cells, where each cell has a value that represents some aspect of the feature being represented. Examples of raster data include:</p> <ul> <li>Elevation data: digital elevation models (DEMs) and digital terrain models (DTMs).</li> <li>Satellite imagery: aerial photographs, multispectral imagery, and thermal imagery.</li> <li>Climate data: temperature, precipitation, and other weather-related data.</li> </ul> </li> </ol> <p>Both vector and raster data can be used in a wide range of GIS applications, such as spatial analysis, cartography, and environmental modeling.</p> <p>A spatial database \u2014 also known as a \u201cgeodatabase\u201d \u2014 is built to capture and store the points, lines, and polygons.</p> <p>A geodatabase is a type of database used to store and manage geospatial data, including features, attributes, and relationships. It is designed to support the storage, query, and manipulation of geographic data in a way that preserves the spatial and temporal relationships between features. A geodatabase can store many different types of data, including points, lines, polygons, and raster datasets, and it can be used for a wide range of applications, including GIS analysis, map production, and data management. Geodatabases are typically created and managed using specialized software, such as Esri's ArcGIS.</p>"},{"location":"intro/#geospatial-analysis","title":"Geospatial Analysis","text":""},{"location":"intro/#common-methods","title":"Common methods","text":"<ul> <li> <p>Spatial querying: Searching and retrieving data based on specific spatial criteria or spatial relationships.</p> </li> <li> <p>Spatial statistics: Analyzing patterns, distributions, and relationships within spatial data using statistical techniques.</p> </li> <li> <p>Spatial modeling: Creating mathematical or computational models to simulate and predict spatial phenomena or processes.</p> </li> <li> <p>Spatial interpolation: Estimating values at unobserved locations based on known values from neighboring locations.</p> </li> <li> <p>Geocoding: Converting addresses or place names into geographic coordinates (latitude and longitude).</p> </li> <li> <p>Network analysis: Examining connectivity, flow, and accessibility within a network, such as transportation or utility networks.</p> </li> <li> <p>Remote sensing: Analyzing data acquired from satellites, aircraft, or other sensors to study and monitor the Earth's surface.</p> </li> <li> <p>Geostatistics: Applying statistical methods to analyze and model spatial variability and uncertainty in data.</p> </li> <li> <p>Spatial visualization: Representing geospatial data through maps, charts, graphs, and other visual formats to facilitate understanding and communication.</p> </li> </ul> <p>These methods are generally used in combination, depending on the specific analysis objectives and the characteristics of the data being studied.</p>"},{"location":"intro/#projections-and-coordinates","title":"Projections and Coordinates","text":"<p>Understanding projections and coordinate systems is essential in GIS to ensure accurate representation and analysis of spatial data. By selecting the right projection, considering the map's purpose, and managing distortions effectively, GIS users can work with spatial data accurately and meaningfully.</p>"},{"location":"intro/#projections","title":"Projections","text":"<p>Map projections are necessary because the Earth's curved surface cannot be perfectly represented on a flat map. This introduces distortions in shape, area, distance, and direction. No projection can eliminate all distortions simultaneously, so choosing an appropriate projection depends on the map's purpose and the properties that need to be maintained or minimized.</p> <p>Ensuring that all datasets and layers are in the same projection is crucial for accurate and meaningful geospatial analysis, as it allows for proper alignment, measurement consistency, and valid spatial relationships between different geographic features.</p> <p>In ArcGIS, you can change or reproject data by using the \"Project\" tool, which allows you to convert data from one coordinate system to another.</p> <p>In QGIS, you can change or reproject data by using the \"Reproject Layer\" tool, which enables you to transform data from one coordinate system to another.</p> <p>In Python, you can perform reprojection of geospatial data using various libraries such as pyproj and gdal.</p> <p>Commonly used projections:</p> <p>Mercator Projection: The Mercator projection is widely used for world maps, navigation charts, and online mapping applications. ArcGIS/ESRI has adopted a modified version of the Mercator projection called the \"Web Mercator Auxiliary Sphere\" (WGS 1984 Web Mercator, or Web Mercator for short) as the default projection for web mapping services within their software ecosystem.</p> <p>Lambert Conformal Conic projection: The custom projection used by Statistics Canada is a variant of the Lambert Conformal Conic projection. The Statistics Canada Lambert projection is specifically based on the Lambert Conformal Conic projection, which is a type of conic projection known for preserving local angles and shapes.</p>"},{"location":"intro/#coordinate-systems","title":"Coordinate Systems","text":"<p>Coordinate systems provide a reference framework to define locations on the Earth's surface. There are two main types: geographic coordinate systems (latitude and longitude) and projected coordinate systems (X and Y coordinates on a flat map).  Geographic coordinate systems are spherical and measure positions in latitude and longitude.  Projected coordinate systems use Cartesian coordinates and are used for accurate measurements and analysis.</p>"},{"location":"intro/#gis-vocabulary","title":"GIS Vocabulary","text":"Term Description API Application Programming Interface - a method for software developers to enable communication between different applications or systems. ArcGIS A geographic information system (GIS) software suite developed by ESRI. ArcGIS Pro A desktop GIS application in the ArcGIS suite for advanced geospatial analysis, data management, and visualization. App Short for \"application,\" referring to software designed to run on PCs, smartphones, tablets, or other web devices. Attribute Non-spatial information associated with geospatial data, stored in attribute tables. Basemap GIS data and/or imagery that form the background setting for a map. Buffer A zone or area created around a geographic feature, often used for proximity analysis. Cartography The art and science of creating maps, including design, symbolization, and map production. Choropleth Map A thematic map that uses different shades or patterns to represent data values for specific geographic areas. Coordinates Values represented by the letters x, y, z [or m (measure)], that define a position within a spatial reference. CRS Coordinate Reference System - a framework used to define and locate geographic features on the Earth's surface. DCAT, geoDCAT-ap Metadata standard to make spatial datasets, dataset series, and services searchable on general data catalogs. DEM Digital Elevation Model - a representation of terrain or surface topography in a digital format. ESRI Environmental Systems Research Institute, Inc. - a leading company in the GIS industry, known for developing ArcGIS software. EO, Earth Observation Information about the planet Earth gathered via remote-sensing technologies and by ground-based techniques (ex- satellite or drone imagery). ETL Procedure of copying data from sources into a destination system which represents the data differently from the source or in a different context than the source. Generalization Method used in GIS to reduce detail in data (for privacy and/or visualizing). Geocode The process of identifying a location by one or more attributes, typically address or latitude/longitude, from a layer. Geodatabase A container or file format used to store, manage, and organize geospatial data in a structured manner. Geographic Information System A system designed to capture, store, analyze, manage, and present spatial and attribute data. Geoprocessing The analysis and manipulation of geospatial data using GIS tools and algorithms. Geospatial Relating to or denoting data that is associated with a specific location on the Earth's surface. HNAP HNAP-Canada is a profile on Harmonized North American Profile which itself is a profile on ISO19139 (ISO 19115*). IDE Integrated Development Environment - a software application that provides comprehensive tools for software development. Jupyter Notebook An open-source web application that allows users to create and share documents containing live code, equations, visualizations, and narrative text. Layer Thematic data described and stored in a map library. Layers act as transparencies that can be laid atop one another for viewing or spatial analysis. Metadata Information that describes the characteristics and properties of geospatial data, such as its source, quality, and content. OGC Open Geospatial Consortium - Open Source champion; Open Standards. PostgreSQL Open-source object-relational database system; Azure Managed. Projection A mathematical transformation applied to spatial data to convert it from the Earth's curved surface to a flat surface, typically a map. Python A popular high-level programming language widely used in geospatial analysis and scripting within the GIS domain. R A programming language and software environment for statistical computing and graphics, commonly used in data analysis and visualization. Raster A data format that represents geographic information as a grid of cells or pixels, commonly used for satellite imagery and elevation data. Shapefile Vector data storage format for storing the location, shape, and attributes. It is stored in a set of 4 related files and contains one feature class. Shapefiles should be avoided when possible. Topology The spatial relationships and connectivity between geometric features within a GIS dataset. Vector A data format that represents geographic features as points, lines, and polygons using coordinates. Web-Map An interactive map accessible over the internet, often built using web technologies and geospatial data. WFS Specifications that standardize data manipulation and map display on the Internet. WMS Specifications that provide uniform access by Web clients to maps rendered by map servers on the Internet."},{"location":"language/","title":"Changing Language Settings","text":"<p>Please select your desired software to expand the help section. </p> ArcGIS Pro <p>ArcGIS Pro requres a seperate langage package to be installed.  Contact the DAS team to complete this request. Learn More</p> <p>ArcGIS Pro requiert l'installation d'un package de langue. Veuillez contacter l'\u00e9quipe DAS pour cette demande. En savoir plus</p> ArcGIS Portal (Enterprise) <p>ArcGIS Portal should inherit the system/browser language.  To override this, follow these steps:</p> <ol> <li>Click you name in the top right corner, and select My Settings.</li> <li>Scroll down to Language, number, and date format and select Update.</li> <li>Select your desired language.</li> </ol> <p>ArcGIS Portal devrait h\u00e9riter de la langue du syst\u00e8me/navigateur. Pour passer outre, suivez les \u00e9tapes suivantes :</p> <ol> <li>Cliquez sur votre nom dans le coin sup\u00e9rieur droit, puis s\u00e9lectionnez Mes param\u00e8tres.</li> <li>Faites d\u00e9filer vers le bas jusqu'\u00e0 Langue, nombres et format de date.</li> <li>Cliquez sur Mise \u00e0 jour, et faites votre s\u00e9lection.</li> </ol> ArcGIS Insights <p>ArcGIS Insights; Enterprise: the software will inherit your web-browser's language settings</p> <p>ArcGIS Insights; Enterprise: le logiciel h\u00e9ritera des param\u00e8tres linguistiques de votre navigateur web.   </p> QGIS <p>The QGIS interface is natively programmed in English, to override this follow these steps:</p> <ol> <li>Select Settings from the tool bar, then select Options.</li> <li>Select General from the left-hand menu.</li> <li>Ensure the selection box beside Override System Locale is checked.</li> <li>Select your language from the drop-down, then restart QGIS.</li> </ol> <p>L'interface de QGIS est nativement programm\u00e9e en anglais, pour passer outre cela, suivez ces \u00e9tapes:</p> <ol> <li>S\u00e9lectionnez Preferences dans la barre d'outils, puis s\u00e9lectionnez Options.</li> <li>S\u00e9lectionnez G\u00e9n\u00e9ral dans le menu de gauche.</li> <li>Assurez-vous que la case de s\u00e9lection \u00e0 c\u00f4t\u00e9 de Remplacer les param\u00e8tres r\u00e9gionaux du syst\u00e8me est coch\u00e9e.</li> <li>S\u00e9lectionnez votre langue dans la liste d\u00e9roulante, puis red\u00e9marrez QGIS.</li> </ol> pyCharm <p>To change the language follow these steps:</p> <ol> <li>Press Ctrl+Alt+S to open the IDE settings and select Editor from the left-hand Menu.</li> <li>Select Natural Languages.</li> <li>In the list of languages and select your language, click Apply, then restart.</li> </ol> <p>Pour changer la langue, suivez ces \u00e9tapes</p> <ol> <li>Appuyez sur Ctrl+Alt+S pour ouvrir les param\u00e8tres de l'EDI et s\u00e9lectionnez \u00c9diteur dans le menu de gauche\".</li> <li>S\u00e9lectionnez Langues naturelles.</li> <li>Dans la liste des langues, s\u00e9lectionnez votre langue, cliquez sur Appliquer, puis red\u00e9marrez\".</li> </ol> VSCode <p>To change the display language, do the following: </p> <ol> <li>Press Ctrl + Shift + p, start typing Display, Select Configure Display Language.</li> <li>Select your desired language, then restart VS Code.</li> </ol> <p>Pour changer la langue d'affichage, suivez les \u00e9tapes suivantes:</p> <ol> <li>Appuyez sur Ctrl + Shift + p, commencez \u00e0 taper Affichage, s\u00e9lectionnez Configurer la langue d'affichage.</li> <li>S\u00e9lectionnez la langue souhait\u00e9e, puis red\u00e9marrez VS Code.</li> </ol> Azure Portal <p>To change the language of the Azure interface, complete the following:</p> <ol> <li>Click the Settings icon(gear) in the main tool bar.</li> <li>Click the Language + Region tab in the left-hand menu.</li> <li>Use the drop-downs to choose your desired language.</li> <li>Click Apply.</li> </ol> <p>Pour changer la langue de l'interface Azure, suivez les \u00e9tapes suivantes:</p> <ol> <li>Cliquez sur le menu Param\u00e8tres(ic\u00f4ne d'engrenage) dans l'en-t\u00eate de la page principale.</li> <li>Cliquez sur l'onglet Langue et r\u00e9gion dans le menu de gauche.</li> <li>Utilisez les menus d\u00e9roulants pour choisir la langue pr\u00e9f\u00e9r\u00e9e et le format r\u00e9gional appropri\u00e9.</li> <li>Cliquez sur le bouton Appliquer pour mettre \u00e0 jour vos param\u00e8tres de langue et de format r\u00e9gional.</li> </ol> VMs / AVD <p>To configure the display language for a Windows virtual machine:</p> <ol> <li>Search and Open Settings</li> <li>Select Time &amp; Language.</li> <li>Select Language. Under Preferred languages, select Add a language.</li> <li>In the Choose a language to install dialog box, select your preferred language pack and then click Next.</li> <li>In the Install language features dialog box, click Install.</li> <li>The Windows display language box should now include the newly added language. To switch to the new language, select it from the Windows display language box, sign out of the current Windows session, and then sign back in.</li> </ol> <p>Pour configurer la langue d'affichage dans une machine virtuelle Windows, voici les \u00e9tapes \u00e0 suivre:</p> <ol> <li>Recherchez et s\u00e9lectionnez Param\u00e8tres</li> <li>S\u00e9lectionnez Heure et langue.</li> <li>S\u00e9lectionnez Langue. Utilisez le menu d\u00e9roulant sous l'en-t\u00eate Langue d\u2019affichage de Windows pour choisir la langue d\u00e9sir\u00e9e.</li> <li>La zone de langue d'affichage de Windows doit maintenant comprendre la langue choisie. Pour \u00eatre en mesure d'appliquer la nouvelle langue, d\u00e9connectez-vous de la session Windows actuelle, puis reconnectez-vous.</li> </ol>"},{"location":"login/","title":"Signing in- Accessing DAS","text":"External Users (non-StatCan) <ol> <li> <p>Visit the following link: Data Analytics Services Portal</p> </li> <li> <p>In the top right, select Sign In</p> <p></p> </li> <li> <p>Follow the prompts on the pop-up window to sign-in</p> </li> <li> <p>Scroll down, and your DAS VM will be listed</p> </li> <li> <p>Use the interface to Start, Connect, then Stop your VM</p> </li> </ol> Internal Users (StatCan employees) <ol> <li> <p>Using Chromium or Edge, open the Azure Portal </p> </li> <li> <p>You may then be prompted to either enter or pick an account:  </p> <ul> <li>Upon your first time signing in, you will receive the Microsoft Sign in prompt, as shown below.  </li> </ul> </li> </ol> <p>     - Enter your cloud account credentials (firstname.lastname@cloud.statcan.ca), and click on Next.</p> <pre><code>- On subsequent sign-ins, you will receive the Microsoft Pick an account prompt, as shown below. Click on your **cloud.statcan.ca** account.\n</code></pre> <p> </p> <ol> <li> <p>You will then be prompted to enter your cloud account password, as shown below. Once entered, click on Sign in. </p> Is your first time accessing the STC Cloud? <ul> <li> <p>use the temporary password that was emailed to you by the cloud team</p> </li> <li> <p>you will then be asked to set-up 2MFA on your phone and 5 Password Recovery questions</p> </li> <li> <p>follow the prompts as directed, it should take about 2-5 minutes</p> </li> </ul> </li> <li> <p>Lastly, you may be asked to confirm your account via your cellular device. </p> </li> <li> <p>You should now be presented with the Azure Cloud Homepage.</p> </li> </ol>"},{"location":"notebook/","title":"Creating Visuals in Notebooks (python)","text":"<p>When creating map visuals in a notebook, you can choose between using the proprietary ArcGIS API for Python, open-source Python libraries like GeoPandas and Matplotlib, or adopting a hybrid approach that combines both. The ArcGIS API offers extensive geospatial capabilities and integration with ArcGIS products, while open-source libraries provide flexibility and community support. The hybrid approach allows you to leverage the strengths of both options based on your specific needs and preferences.</p> Using Open Source Methods <ol> <li>Install the required Python packages for geospatial analysis, such as <code>geopandas</code>, <code>folium</code>, or <code>matplotlib</code>.</li> <li>Import the necessary modules in your Python notebook.</li> <li>Read or import the geospatial data into a suitable data structure.</li> <li>Visualize the data using the chosen package's mapping functions or classes.</li> <li>Customize the map properties, such as colors, symbology, or basemaps.</li> <li>Add additional layers or annotations to the map, if needed.</li> <li>Export the map to a desired format or display it in the notebook.</li> <li>Save the map or share it with others as an image or interactive HTML file.</li> </ol> <p>Example code using <code>geopandas</code> and <code>matplotlib</code>:</p> <pre><code>import geopandas as gpd\nimport matplotlib.pyplot as plt\n# Read the geospatial data\ndata = gpd.read_file(\"path_to_shapefile.shp\")\n# Visualize the data on a map\ndata.plot()\n# Customize the map properties\nplt.title(\"My Geospatial Map\")\nplt.xlabel(\"Longitude\")\nplt.ylabel(\"Latitude\")\n# Export the map\nplt.savefig(\"path_to_output_file.png\", dpi=300)\n# Display the map in the notebook\nplt.show()\n</code></pre> Using ArcGIS API Method <p>Using ArcGIS Paid Product</p> <ol> <li>Import the necessary ArcGIS modules in your Python notebook.</li> <li>Connect to your ArcGIS account or portal using appropriate credentials.</li> <li>Create a map object using the <code>arcgis.mapping</code> module.</li> <li>Add desired layers or data to the map.</li> <li>Customize the map properties, such as extent, scale, and symbology.</li> <li>Optionally, add labels, legends, or other cartographic elements.</li> <li>Export the map to a desired format or display it in the notebook.</li> <li>Save the map or share it with others through the ArcGIS platform.</li> </ol> <p>Example code:</p> <pre><code>import arcpy\nfrom arcgis.gis import GIS\nimport arcgis.mapping as mapping\n# Connect to your ArcGIS account or portal\ngis = GIS(\"https://geoanalyticsdev.cloud.statcan.ca/portal\", client_id=' ')\n# Authentication pop-up will open\n# Create a new map\nmap = mapping.Map()\n# Add layers or data to the map\nmap.add_layer(\"path_to_layer1\")\nmap.add_layer(\"path_to_layer2\")\n# Customize map properties\nmap.zoom_to_layer(\"path_to_layer1\")\nmap.legend = True\n# Export the map\nmap.export(\"path_to_output_file.jpg\", resolution=300)\n# Display the map in the notebook\nmap\n</code></pre> Using ArcPy <ol> <li>Ensure you are using the ArcGIS version of Jupyter notebook for ease of use. Go to Start &gt; ArcGIS &gt; Jupyter Notebook. This will negate the need to modify your system environment and paths.</li> <li>Import the necessary ArcPy modules in your Python notebook.</li> <li>Connect to your ArcGIS account or portal using appropriate credentials.</li> <li>Set the workspace to the location of your geospatial data.</li> <li>Create a map document object using the <code>arcpy.mapping</code> module.</li> <li>Add desired layers or data to the map.</li> <li>Customize the map properties, such as extent, scale, and symbology.</li> <li>Optionally, add labels, legends, or other cartographic elements.</li> <li>Export the map to a desired format or display it in the notebook.</li> <li>Save the map or share it with others through the ArcGIS platform.</li> </ol> <p>Example code:</p> <p><pre><code>import arcpy\nimport arcpy.mapping as mapping\n# Set the workspace to the location of your geospatial data\narcpy.env.workspace = \"path_to_workspace\"\n# Create a new map document\nmxd = mapping.MapDocument()\n# Add layers or data to the map\ndf = mapping.ListDataFrames(mxd)[0]\nlayer1 = mapping.Layer(\"path_to_layer1\")\nlayer2 = mapping.Layer(\"path_to_layer2\")\nmapping.AddLayer(df, layer1)\nmapping.AddLayer(df, layer2)\n# Customize map properties\ndf.zoomToSelectedFeatures()\ndf.legend.title = \"Legend\"\ndf.titleText = \"My Map\"\n# Export the map\nmapping.ExportToJPEG(mxd, \"path_to_output_file.jpg\", resolution=300)\n# Display the map in the notebook\nmxd\n</code></pre> **Learn more about ArcPY</p> <p></p> <p>Common Open Source Visualization packages include:</p> <ul> <li>Matplotlib</li> <li>Seaborn</li> <li>Plotly</li> <li>Folium</li> <li>GeoPandas</li> <li>Bokeh</li> <li>Basemap</li> <li>Cartopy</li> <li>Geoplot</li> <li>PySAL</li> </ul> <p>These libraries provide different levels of functionality and customization options, so you can choose the one that best fits your needs and preferences.</p>"},{"location":"pipeline/","title":"Azure Blob (FDI)","text":"<p>This page is incomplete</p> <p>More information and services coming soon!</p>"},{"location":"pipeline/#azure-blobs","title":"Azure Blobs","text":"<p>Blobs are managed and maintained by the DAS-FDI team, ensuring the availability and reliability of the storage infrastructure across the entire DAS platform and AVD.</p> <p>Azure Blobs is a scalable and cost-effective cloud storage service for unstructured data, offering durability, availability, and security. It provides seamless integration with other Azure services for building robust applications. While Azure Blobs is primarily designed for unstructured data, it can also be used for storing and managing geospatial data, even though geospatial data is typically structured.</p> <p>When working with geospatial data stored in Azure Blob, users have a few options for efficient collaboration. They can either copy the data locally using Azure Data Explorer for individual use, or utilize Azure Data Explorer to copy the data and then load it into the ArcGIS portal or a PostgreSQL database for collaborative work. These approaches ensure smooth data accessibility and enable effective collaboration among team members.</p>"},{"location":"pipeline/#using-azure-data-explorer","title":"Using Azure Data Explorer","text":"<ol> <li> <p>Launch Azure Storage Explorer and if necessary sign in to your account.</p> </li> <li> <p>Connect to your Azure Blob storage by selecting the container from the left menu bar (or searching).</p> </li> <li> <p>Once connected, you will see the Blob containers and their contents in the Azure Storage Explorer interface.</p> </li> <li> <p>To copy data locally, navigate to the desired Blob container, select the files or folders you want to copy, and choose the \"Download\" option.</p> </li> <li> <p>To upload data to Blob storage, select the destination Blob container, choose the \"Upload\" option, and select the files or folders you want to upload.</p> </li> <li> <p>Azure Storage Explorer also provides features for renaming, deleting, and managing Blob containers and their properties.</p> </li> </ol>"},{"location":"portal/","title":"ArcGIS Enterprise","text":""},{"location":"portal/#overview","title":"Overview","text":"<p>Collaboration and flexibility are central to ArcGIS Enterprise, allowing you to organize and share your work. Interactive and easy-to-read data visualizations including, map-centric apps, stories, dashboards, can be created using a no-code app builder.</p> <p>Here are some common tasks and activities that users can perform in ArcGIS Enterprise:</p> <ul> <li> <p>Map Viewing and Exploration: Create, access and explore maps and spatial data, with the ability to zoom, pan, and query features.</p> </li> <li> <p>Data Query and Analysis: Perform attribute-based queries and conduct basic spatial analysis on datasets.</p> </li> <li> <p>Collaboration and Sharing: Users can share their maps, data, and analysis results with others through collaboration groups and by creating web maps and applications.</p> </li> <li> <p>Data Editing and Maintenance: Users, based on permissions, can edit and update spatial datasets, adding, modifying, or deleting features.</p> </li> <li> <p>Custom Application Development: Skilled users can develop custom web applications and services.</p> </li> <li> <p>Visualization and Reporting: Users can create visually appealing maps, dashboards, and reports to effectively communicate their spatial analysis findings.</p> </li> </ul>"},{"location":"portal/#becoming-a-user","title":"Becoming a User","text":"Register and Create Account <ol> <li> <p>Visit DAaaS GAE Enterprise Portal to sign on to the ArcGIS Enterprise Portal</p> </li> <li> <p>Select the StatCan Azure Login button</p> <p></p> </li> <li> <p>If your password was not remembered by Azure you will be asked to enter it and verify by phone</p> <p> </p> </li> <li> <p>You will then be presented with this screen:     </p> </li> <li> <p>For security reasons, your default role will be Viewer Only. Contact the DAaaS Geo Team to have your permissions adjusted. See the Contact section for help on how to contact DAS-GAE</p> </li> </ol> About User Roles <p>You will be assigned either a Project Viewer or Project Member user role depending on your needs. </p> <ul> <li> <p>Project Viewer   View items such as maps, apps, scenes, and layers that have been shared with the public, the organization, or a group to which the member belongs. Join groups owned by the organization. Drag CSV, text, or GPX files into Map Viewer Classic (formerly Map Viewer) to geocode addresses or place names. Get directions in a map viewer and apps. Members assigned the Viewer role cannot create or share content, or perform analysis.</p> </li> <li> <p>Project Member   Project Viewer privileges plus the ability to create, update and delete their own content. Users can publish hosted feature layers, hosted tile layers, hosted scene layers, and server-based layers. Share content to assigned groups. Create content such as Maps (including feature analysis tasks), Dashboards, Apps, and Story Maps.  </p> </li> </ul> About Your Groups <p>The groups you belong to are where you can collaborate with other users on the same project or team. In the main header, click Groups. This is where you can see the groups you have been added to.   Click on the group name to see all the shared content.</p> <p>You may notice there are two groups for the same project. These two groups cater to different user roles, ensuring efficient collaboration and controlled access to data within the ArcGIS portal.</p> <p>The first group, Editors is designated for members who have editing privileges. This means they are granted the ability to modify and update the items within the group. They can add, edit, or delete content, as well as make changes to existing items. </p> <p>The second group, Viewers is a view-only group. Its members have restricted permissions and are limited to viewing the items available in the group. They can explore and access the content, but they do not possess the authority to make any alterations or edits. </p>"},{"location":"portal/#uploadingpublishing-content","title":"Uploading/Publishing Content","text":"Uploading from ArcGIS Pro <p>Please refer to this section:ArcGIS Pro- Sharing Results</p> Uploading Content using Portal Interface <p>Shapefiles and File Geodatabases are the most common files that will be uploaded to the Portal. However a full list of supported items can be found by clicking the question mark as seen in the figure below.</p> <p>Click the Content tab and under My Content, click Add Item. Select From your computer. Select Choose File and navigate to the zipped folder of the content you want to upload. Ensure the correct file types is selected from the drop down menu and Publish this file as a hosted layer is selected. Assign the content a title and tags. Click Add Item.</p> <p>Note: Selecting Publish this file as a hosted layer will also publish the content as a hosted layer that can be used and shared between your group members. If the option is not selected, then the file itself (ex. File Geodatabase) will be uploaded and available for download by other group members but not useable by group members until it has been published as a hosted layer.  </p> <p>Similar steps can be followed to upload content via a URL to a layer or document on the web, or a URL to an application on the web.</p> <p>Content can also be uploaded directly to a Web Map using the same means as outlined above. </p> <p>Learn More: ArcGIS Portal; Add Items</p> Publishing Content- Portal Upload <ol> <li>Items can be published directly from your files as seen in the Uploading Content section. </li> <li>If the item file is directly uploaded to the portal such as a shapefile or geodatabase, the user can manually publish the item  </li> <li>Items can also be directly imported into a Web Map (see Web Map section for more information) and published to the portal individually. </li> </ol> <p>Learn More: ArcGIS Portal; Publishing</p> Via API <p>Your project group will be provided with a Client ID upon onboarding which will be used to connect to the ArcGIS Enterprise Portal. Paste the Client ID in-between the quotations. </p> Best Practices <ul> <li> <p>Items should only be shared to your group. Do not share to the enterprise or public level.</p> </li> <li> <p>Use many appropriate tags - this is how most people will find your work. </p> </li> <li> <p>Use common tags for items that are related.</p> </li> <li> <p>Organize content: Use a structured and logical system to organize content in the portal. This can include creating folders, groups, and categories to make it easier for users to find and access content.</p> </li> <li> <p>Use metadata: Include comprehensive metadata for all items in the portal to make it easier for users to discover, understand, and use the content</p> </li> <li> <p>Use a Naming Convention</p> <ul> <li>Use Semantic Versioning<ul> <li>A three-part version number (Major.Minor.Patch)</li> <li>ex: My Map v1.2.4,  EV_Viewer_App DEV v0.0.2</li> <li>add a Last Updated: attribute to the details in the item's overview page </li> </ul> </li> </ul> </li> </ul>"},{"location":"portal/#connecting","title":"Connecting","text":"<p><pre><code>    gis = GIS(\"https://geoanalyticsdev.cloud.statcan.ca/portal\", client_id=' ')\nprint(\"Successfully logged in as: \" + gis.properties.user.username)\n</code></pre> The output will redirect you to a web page where you can login to the Portal using the StatCan Azure Login option. After successful login, you will recive a code to sign in using SAML. Paste this code into the output. </p> <p></p>"},{"location":"portal/#uploading-content","title":"Uploading Content","text":"<p>```python     # Define the path to the file you want to upload     file_path = \"/path/to/your/file\"</p> <pre><code># Upload the file to your ArcGIS Enterprise instance\nitem_properties = {\"title\": \"My Uploaded File\", \"tags\": \"file, upload\"} # replace with your desired item properties\nitem = gis.content.add(item_properties, data=file_path)\n\n# Print out the URL of the uploaded item\nprint(\"Uploaded item URL: {}\".format(item.url))\n```\n\n[Learn More about the API; ESRI Documentation](https://developers.arcgis.com/python/)\n</code></pre>"},{"location":"portal/#connecting-to-spatial-data-gae-enterprise-portal","title":"Connecting to Spatial Data - GAE Enterprise Portal","text":"<p>The ArcGIS Enterprise Portal can be accessed in either the AAW or CAE using the API, from any service which leverages the Python programming language. </p> <p>For example, in AAW and the use of Jupyter Notebooks within the space, or in CAE the use of Databricks, DataFactory, etc.</p> Connecting to GAE Portal using ArcGIS API <ol> <li> <p>Install packages:</p> <pre><code>conda install -c esri arcgis\n</code></pre> <p>or using Artifactory</p> <pre><code>conda install -c https://jfrog.aaw.cloud.statcan.ca/artifactory/api/conda/esri-remote arcgis\n</code></pre> </li> <li> <p>Import the necessary libraries that you will need in the Notebook.     <pre><code>from arcgis.gis import GIS\nfrom arcgis.gis import Item\n</code></pre></p> </li> <li> <p>Access the Portal     Your project group will be provided with a Client ID upon onboarding. Paste the Client ID inbetween the quoatations <code>client_id='######'</code>. </p> <pre><code>gis = GIS(\"https://geoanalytics.cloud.statcan.ca/portal\", client_id=' ')\nprint(\"Successfully logged in as: \" + gis.properties.user.username)\n</code></pre> </li> <li> <ul> <li>The output will redirect you to a login Portal.</li> <li>Use the StatCan Azure Login option, and your Cloud ID </li> <li>After successful login, you will receive a code to sign in using SAML. </li> <li>Paste this code into the output. </li> </ul> <p></p> </li> <li> <p>Customize the label placement, font styles, and other visual properties.</p> </li> <li>Use advanced options to control label visibility, label priority, and collision avoidance.</li> <li>Preview and fine-tune the labels until they are legible and provide valuable information.</li> </ol>"},{"location":"portal/#arcgis-web-maps-overview","title":"ArcGIS Web Maps Overview","text":"<p>Web maps in ArcGIS Portal (Enterprise) enable users to explore, analyze, and share spatial information. By creating web maps, users can organize data layers, customize symbology, and configure interactive behaviors. </p> <p>Features include customizable symbology, layer visibility control, configurable pop-ups, bookmarks for navigation, and collaboration tools. Web maps are powerful tools for analyzing and communicating geospatial information effectively.</p> Before you begin: ArcGIS Portal Intro <p>To create a web map in Portal, start by self-registering for an Enterprise account and then publishing data into the Portal.  For detailed instructions, refer to this page which provides a complete step-by-step guide: GAE Storage- ArcGIS Portal</p> Creating Web Maps <ol> <li> <p>Click the 'Map' tab in the GAE Portal.</p> </li> <li> <p>Click on the \"Add layer\" button to add data layers from various sources, such as your portal content, online services, files, or by searching for available data.</p> </li> <li> <p>Configure Layer Properties: Once you have added the data layers, you can configure their properties, such as symbology, labeling, and pop-ups, to customize their appearance and behavior on the map.</p> </li> <li> <p>Perform Map Styling: Use the available tools and options in the Map Viewer to style and enhance your map. This includes changing basemaps, adjusting the extent and scale, setting the map layout, and applying other cartographic elements.</p> </li> <li> <p>Add Additional Elements: Enhance your map by adding additional elements such as legends, scale bars, north arrows, titles, or text annotations. These can be inserted using the Map Viewer's interface.</p> </li> <li> <p>Save and Share: Once you are satisfied with your map, save it in your ArcGIS Enterprise portal. Give it a meaningful name and provide any necessary tags or descriptions. You can also choose to share the map with specific individuals or groups within your organization or make it publicly accessible.</p> </li> </ol>"},{"location":"portal/#arcgis-webapps","title":"ArcGIS WebApps","text":""},{"location":"portal/#build-and-share-spatial-apps","title":"Build and Share Spatial-Apps","text":"Before you begin: ArcGIS Portal Intro <p>To create a web map in Portal, start by self-registering for an Enterprise account and then publishing data into the Portal.  For detailed instructions, refer to this page which provides a complete step-by-step guide: GAE Storage- ArcGIS Portal </p> <p>ArcGIS Enterprise offers a range of no-code apps that allow users to create and share interactive geospatial applications without coding skills. </p> <p>Both Apps and Sites are made from your published data-layers and maps.  The first step to creating an App/Site is to have you analysis completed, and all your layers and maps published.   </p> <p>Data goes into Layers;</p> <p>Layers go into Maps;</p> <p>Maps and Layers go into Apps;</p> <p>Maps and Apps go into Sites (data can be downloaded from Sites). </p>"},{"location":"portal/#no-code-apps","title":"No-Code Apps","text":"<p>These Apps enhance data visualization, and support data-driven decision-making. </p> Creating Interactive Apps <p>To create an app, navigate to the Content tab in the main ribbon and click My Content.  There is a Create app button that will allow you to work with different types of interactive apps. </p> <p></p> <ol> <li> <p>Instant Apps: Enables quick building and configuration of templated web apps with streamlined and customizable options.</p> </li> <li> <p>Experience Builder: Build and create engaging app experiences by combining maps, media, and other content with customizable layouts and themes.</p> </li> <li> <p>StoryMaps: Create narrative-driven stories by combining maps, text, images, and multimedia to engage and inform the audience.</p> </li> <li> <p>Dashboards: Visualize real-time data with dynamic charts, maps, and gauges to monitor key performance indicators and communicate insights effectively.</p> </li> <li> <p>Web AppBuilder : Build web applications by configuring pre-built widgets and templates, with a drag-and-drop interface.</p> <p> AppBuilder as part of ArcGIS Enterprise is considered deprecated. Although still available, users should switch to Experience Builder moving forward</p> </li> <li> <p>Configurable Apps :  Build web apps from your web maps, scenes, and groups without having to write code</p> <p> Configurable Apps as although still available in Enterprise, uses JavaScript 3.x and should be avoided, Instant Apps is better</p> </li> </ol> <p>Learn More: Get started with apps\u2014Portal for ArcGIS | Documentation for ArcGIS Enterprise</p>"},{"location":"portal/#no-code-sitespages","title":"No-Code Sites/Pages","text":"<p>Sites enables users to create interactive web pages and websites without coding, showcasing maps, data, and multimedia content with customizable templates and seamless integration.</p> What is an Enterprise Site? <p>ArcGIS Enterprise Sites allows you to create a tailored web page experience to help you share your GIS products to others  more easily, even if they are not used to working in your GIS. Instead of learning to navigate the portal and access groups, consumers can go directly to the custom web page you create to navigate the content relevant to them.  Consumers will require a Viewer role.</p> <p>Sites features a built-in web page designer that integrates a drag-and-drop experience with HTML markup, giving you absolute control over the design of the web pages you create. You can also add non-GIS content, such as videos and documents, to your Site to create a central place for material relevant to your users to be hosted and accessed.</p> <p>Users more familiar with ArGIS Online deployment/portal will known this feature as Hubs</p> Creating an Enterprise Site <p>To Begin:</p> <p>To request (initialize) a Site, contact the DAS-GAE team via the Jira Board.  How to submit a technical request or report a problem. </p> <p>Please include what you would prefer the URL to be.  The URL will be formatted as:     <code>https://geoanalytics.cloud.statcan.ca/portal/apps/sites/#/{YOUR_CHOSEN_URL}</code></p> <p>Along with your Site, 2 groups will be created.  One for editors, and one for viewers only.  These groups will control who has access to your site, and which items they can interact with.</p> <p>Once your site is initialized:</p> <ol> <li>Access the ArcGIS Sites application.</li> <li>Choose a template or layout that suits your needs.</li> <li>Customize the site by adding maps, data, multimedia content, and text.</li> <li> <p>Configure the appearance of the site by selecting colors, fonts, and branding elements.</p> <p>ESRI leverages a custom theme and build of the Bootstrap(3) system for page design. Knowledgeable users who want to use custom HTML in the SiteApp should reference this resource: Calcite Bootstrap Theme by ESRI</p> </li> <li> <p>Embed additional ArcGIS content such as maps, apps, and dashboards if desired.</p> </li> <li>Preview and review the site to ensure it meets your requirements.</li> <li>Publish the site to make it accessible to others.</li> <li>Share the site URL or embed it on other web pages to reach your intended audience.</li> </ol>"},{"location":"portal/#working-with-multiple-versions-dev-prod","title":"Working with Multiple Versions (DEV-PROD)","text":"<p>Creating separate test and production workspaces can provide significant benefits to project, including improving their development processes, reducing risk, and enhancing the reliability and security of their systems. </p> <p>However, physical separation of dev-test-prod workspaces is not feasible on DAS. Nonetheless, GAE can help by creating separate groups that emulate separate workspaces. Since each project has unique needs, there is no one-size-fits-all solution. </p> Typical process flow <p></p> <p>If you are using an ArcGIS Site to share your app, the workflow will typically look like this:</p> <p> </p> <p>Users can use the ArcGIS Online Assistant to repair/relink layers and maps as needed.  See the next section for advice on using the tool.  It is essential to follow best practices, especially in naming and data organization when working with multiple workspaces.</p> Replacing a layer within an Web Map <p>There may be a scenario where you want to replace a layer in a map with an updated version or a replacement dataset.  There are several ways to accomplish this, one of the easier methods is using the ArcGIS Online Assistant</p> Proceed with Caution! <p>Changing a layer in an existing map may have unintended consequences. App Widgets and controls linked to the map might break and need to be reconfigured.  Ensuring layer names and table headers match old versions will help keep compatibility, but there is no guarantee. Risks include: Corrupting content, losing access to items, breaking apps built ontop of the map.</p> <ol> <li> <p>Log in to Portal for ArgGIS </p> </li> <li> <p>Enter the Portal URL https://geoanalytics.cloud.statcan.ca/portal ,and, your APP ID (API Key) from the ArcGIS Portal </p> </li> <li> <p>A pop-up window will appear, select StatCan Azure Cloud Login </p> </li> <li> <p>In the Assistant Home page, Select the folder where you map is saved on the Portal </p> </li> <li> <p>Select I want to, then Update the URLs of Services in a Web Map </p> </li> </ol> <p>6.In the Find file, enter the URL of the old layer you want to replace.  In replace enter the new URL. Scroll down and select Update Then wait for the Success message.  </p> Where to find the Feature Service URL <p>The URL Can be found in the Portal, on the Feature Services Overview Page:</p> <p></p> <p>The data in your map will now reflect the new service.  You will may need to adjust the Name of the layer on your map, as it will reflect the origina layer.</p> <p>For those who prefer to do things via Python API; follow these instructions provided by ESRI</p> Replacing a Web Map within a Web App Proceed with Caution! <p>Changing a map in an existing web app may have unintended consequences. Widgets and controls might break and need to be reconfigured.  Ensuring layer names and table headers match old versions will help keep compatibility, but there is no guarantee.  DAS-GAE recommends experimenting on a demo/copied app first.  Risks include: Corrupting content, losing access to items, breaking apps built ontop of the map.</p> <p>There may be a scenario where you want to replace a web map with a new map in an already built web app.  We will walk you through how to do this using the AGO Assistant.  We will use the same ArcGIS Online Assistant tool as above, but with a different workflow.</p> <ol> <li> <p>Log in to Portal for ArgGIS </p> </li> <li> <p>Enter the Portal URL https://geoanalytics.cloud.statcan.ca/portal ,and, your APP ID (API Key) from the ArcGIS Portal </p> </li> <li> <p>A pop-up window will appear, select StatCan Azure Cloud Login </p> </li> <li> <p>In the Assistant Home page, Select the folder where you map is saved on the Portal </p> </li> <li> <p>From the I want to... button, select View an Item's JSON, then select the desired app from the highlighted list.  The JSON data will appear on the right. </p> </li> <li> <p>Scroll down on the JSON data pane, to the Data category, and Select the Edit icon.  The data tile will turn to dark-mode, signifying it is in edit mode. </p> </li> <li> <p>In the data tile, locate the map attribute, and replace the itemID field with the new maps ID.  </p> How to find a Map Id <p>The Map Id can be obtained by visiting the Map's overview page, and copying it from the URL </p> </li> <li> <p>Scroll up to the beginning of the data tile and select Save. Confirm the changes in your app, and reconfigure widgets as needed.  </p> </li> </ol> Cloning with the API Proceed with Caution: CLONE vs COPY <p>This clone method does not always work.  Some dataset, layers, items, etc, will be COPIED instead of CLONED. Copies reference back to the original item, pay close attention to the items ID.  It will NOT work for 'map image layers'.</p> <pre><code># Connect to the source portal\nsource_gis = GIS(\"https://geoanalytics.cloud.statcan.ca/portal\", client_id='')\n# Connect to the destination portal\ntarget_gis = GIS(\"https://geoanalytics.cloud.statcan.ca/portal\",client_id='')\n# Get source content\nitem_id = source_gis.content.get(\"#################\")\n# Clone the item to the target portal\ncloned_item = target_gis.content.clone_items(items=[item_id], copy_data=True)\n</code></pre>"},{"location":"post/","title":"PostgreSQL +PostGIS for Analysis","text":"<p>PostgreSQL + PostGIS provides a powerful and robust storage solution for geospatial data, offering advanced capabilities for data management and storage. Additionally, it extends its functionality to enable geospatial analysis, providing a comprehensive platform for performing complex spatial operations, spatial querying, and deriving meaningful insights from geospatial data.</p> <p>It's important to note that conducting analysis using PostGIS involves a combination of SQL queries and programming language code. The SQL queries are used to interact with the database and perform spatial operations, while the programming language facilitates data processing, analysis, and visualization.</p>"},{"location":"post/#use-cases-of-postgis-analysis","title":"Use cases of PostGIS Analysis","text":"Feature Description Spatial Functions PostGIS provides a rich set of spatial functions for distance calculations, buffering, intersection, union, difference, centroid calculation, area calculation, and more. Spatial Joins Perform joins based on spatial relationships, allowing the combination of spatial data within a given distance, polygon, or path. Geometric Operations Geometric transformations, simplification, densification, convex hull calculation, and other operations for data preparation and manipulation. Overlay Analysis Advanced overlay operations like intersection, union, difference, and symmetrical difference for spatial layer overlay and boundary analysis. Geospatial Aggregation Summarize data within spatial regions, calculating statistics (counts, sums, averages) for features within polygons or spatial units. Network Analysis Routing, shortest path analysis, and network-based distance calculations for transportation network analysis and route planning. Raster Data Processing Support for storing and processing raster data, including resampling, reclassification, cropping, mosaicking, and analysis using raster functions. 3D Spatial Operations Analysis and modeling of three-dimensional spatial data, including distance calculations, buffering, and other operations in 3D space. Integration with GIS Seamless integration with popular GIS software and libraries such as QGIS and ArcGIS, enabling the use of PostGIS analysis capabilities within preferred GIS environments. Scalability and Performance Designed to handle large volumes of geospatial data efficiently, leveraging the scalability and performance features of PostgreSQL for optimal processing and analysis."},{"location":"post/#use-postgis-for-analysis","title":"Use PostGIS for analysis","text":"<p>To use PostGIS for analysis, you typically interact with it through a combination of SQL queries and a programming language of your choice. The choice of programming language and the specific tools used may vary depending on your preferences and the requirements of your analysis. Many developers use an IDE or code editors, such as PyCharm, Jupyter Notebook, or Visual Studio Code, to write and execute their code.</p> <p>Here are the general steps to conduct analysis using PostGIS:</p> <ol> <li> <p>Data Preparation: Prepare your geospatial data by importing it into your PostGIS-enabled database. You can use tools like shp2pgsql or graphical interfaces like pgAdmin to load spatial data into the database tables.</p> </li> <li> <p>Connect to the Database: Establish a connection to your PostGIS database using a programming language or a database client. Common programming languages used for PostGIS analysis include Python, R, and JavaScript.</p> </li> <li> <p>Write SQL Queries: Use SQL queries to retrieve and analyze the geospatial data stored in PostGIS. You can perform various types of analysis, such as spatial queries, spatial joins, buffering, overlay operations, and more, by leveraging the spatial functions provided by PostGIS.</p> </li> <li> <p>Incorporate Programming Language: Use a programming language to interact with the database, process the query results, and perform additional computations or analysis. For example, you can use Python libraries like psycopg2 or SQLAlchemy to execute SQL queries and handle the results.</p> </li> <li> <p>Visualization and Interpretation: Once you have obtained the analysis results, you can visualize them using appropriate tools such as GIS software, data visualization libraries, or custom applications. This step helps in interpreting the analysis outcomes and communicating them effectively.</p> </li> </ol>"},{"location":"postgresql/","title":"PostgreSQL+PostGIS","text":"Prerequisites <ol> <li>An onboarded project with a requested database   </li> <li>A virtual machine in the DAaaS Environment with pgAdmin and/or ArcGIS Pro and/or QGIS and/or CAE Azure Services. See the VM page for more information</li> </ol>"},{"location":"postgresql/#accessing-your-database","title":"Accessing your Database:","text":"1. pgAdmin <p>This is one of the more common tool for PostgreSQL database administration. PG-Admin has been installed on your VM.</p> <ol> <li> <p>Connect to your cloud VM and launch pgAdmin.     </p> </li> <li> <p>Add the server you need to connect to by right clicking on Servers in the top left corner     </p> </li> <li> <p>In the General tab, enter a name for your server. You can write the real name of the server    In the Connection tab, enter the full Server name and add your Cloud Account  as Username followed by the server name    or the active directory group you belong to followed by the server name if access to the server was granted to that active directory group.     </p> </li> <li> <p>You can now see in the list of server the newly added server.     Click on it to connect and you will be asked to enter a password     </p> </li> </ol> <p>Learn More: pgAdmin docs</p> 2. ArcPro <p>GAE has streamlined the ArcGIS Pro-PostgreSQL connection process by utilizing a .sde file connection.</p> <ol> <li> <p>In the Catalog pane, right-click Databases and select Add Database </p> </li> <li> <p>In the new window, expand This PC and located your project File share (mounted as a drive) </p> </li> <li> <p>Select the .sde file, and click Ok</p> </li> <li> <p>The PostgreSQL database will not appear under Databases in the Catalog pane.</p> </li> </ol> <p>Learn More: ArcGIS Pro Documentation</p> 3. QGIS <ol> <li> <p>Under the browser tab, Right-click PostgreSQL, and select New Connection</p> <p></p> </li> <li> <p>A new window will open:</p> <p></p> </li> <li> <p>Enter the following information:</p> Field Entry Name Your chosen name(alias) for the database Host Database Instance see onboarding info Port 5432 Database The true name of the database see project file-share; postgreqsl_connection.txt SSL mode allow Authentication *Press the green + button, then enter your cloud info Also list tables with no geometry YES **All other fields can be left blank </li> <li> <p>Select Test Connection</p> </li> <li> <p>The database will now appear under the PostgreSQL heading in the QGIS Browser</p> </li> </ol> <p>Learn More:</p> <ul> <li> <p>QGIS Documentation</p> </li> <li> <p>QGIS + Azure Documentation</p> </li> <li> <p>Line 45- Using QGIS with PostGIS: A Dynamic Duo (whitepaper - English only)</p> </li> </ul> 4. CAE- Azure Cloud Services <p>Azure Data Factory, Azure Data Bricks, Azure Synapse</p> <p>Learn how to use CAE services</p> <p>Please contact the support team through the https://cae-eac.slack.com channel if you need assistance.</p> 5. Python <p>Replace the placeholders with your own database details to connect to your own PostgreSQL database.</p> <pre><code>```\nimport psycopg2\n\nconn = psycopg2.connect(\n    dbname=\"your_database_name\",\n    user=\"your_username\",\n    password=\"your_password\",\n    host=\"your_host\",\n    port=5432\n)\n\n# Define the SQL query to select data from the table\nquery = \"SELECT * FROM your_table;\"\n\n# Use pandas to read the query results into a dataframe\ndf = pd.read_sql_query(query, conn)\n\n# Close the database connection\nconn.close()\n\n# Print the dataframe\nprint(df)\n```\n</code></pre>"},{"location":"postgresql/#how-to-add-data-into-your-database","title":"How to add data into your database","text":"1. Python <p>There are many python packages available for working with PostgreSQL (SQLAlchemy, psycopg*, ogr2ogr...)  This example uses sqlalchemy with help from geoPandas to load a shapefile into the database:</p> <pre><code>```\nimport geopandas as gpd\nfrom sqlalchemy import create_engine\n\n# create the sqlalchemy connection engine\n# replace the &lt; &gt;\n#Example: \"postgresql://myUsername:myPassword@geopostgresqlflex.postgres.database.azure.com:5432/myDataBase\"\ndb_connection_url = \"postgresql://&lt;username&gt;:&lt;password&gt;@&lt;instance&gt;:&lt;port&gt;/&lt;database&gt;\"\nlink = create_engine(db_connection_url)\n\n# read in the data into a geo-dataframe\ngdf = gpd.read_file(r'path_to_file')\n\n# Push the geo-dataframe to postgresql\ngdf.to_postgis(\"&lt;table_name&gt;\", link, index=False, if_exists='replace') \n```\n</code></pre> <pre><code>```\nimport psycopg2\nfrom sqlalchemy import create_engine\nimport pandas as pd\n\n# Connect to the database\nconn = psycopg2.connect(\n    host=\"your_host\",\n    database=\"your_database\",\n    user=\"your_username\",\n    password=\"your_password\"\n)\n\n# Create a SQLAlchemy engine to connect to the database\nengine = create_engine('postgresql://your_username:your_password@your_host/your_database')\n\n# Define the name of the table to be created in the database\ntable_name = 'your_table'\n\n# Define the dataframe to be exported\ndf = pd.DataFrame()\n\n# Use the to_sql method of the dataframe to export it to the database\ndf.to_sql(table_name, engine, if_exists='replace')\n\n# Close the database connection\nconn.close()\n```\n</code></pre> <p>Learn More:</p> <ul> <li> <p>SQLAlchemy Docs</p> </li> <li> <p>PYSHEET - SQLAlchemy cheatsheet (unofficial)</p> </li> <li> <p>GeoPandas Docs</p> </li> </ul> 2. pgAdmim <p>pgAdmin Help Docs: Import/Export Data</p> <p></p> 3. QGIS <p>In current versions of QGIS you can export shape files to PostGIS using the build in DB Manager.  Somewhat counterintuitively, QGIS refers to this as 'importing to Postgis'. </p> <ol> <li> <p>Open DB Manager </p> </li> <li> <p>In the list of PostGIS databases find the one you want to export to, find the desired schema and press import button (marked with the red outline). </p> </li> <li> <p>Choose the shape file in 'input' (must be in your 'Layers Panel') and press 'ok' </p> </li> </ol> <p>Learn More: </p> <ul> <li> <p>QGIS Docs- Lesson: Import and Export</p> </li> <li> <p>OSGeo Docs- PostGIS Quick start</p> </li> <li> <p>Line 45- Using QGIS with PostGIS: A Dynamic Duo (whitepaper)</p> </li> </ul> 4. ArcPro <p>To simplify the process, GAE has crated a database connection file for your project; .sde file.  This can be located in your project's file share which is mounted as a drive to your VM.</p> <ol> <li> <p>When ready import your data into the PostgreSQL DB from arc pro, use the Feature Class to Feature Class tool. </p> </li> <li> <p>For Output Location select the .sde file in your projects file share. </p> </li> <li> <p>Output Name will be the table name in the database</p> </li> <li> <p>Select run</p> </li> </ol>"},{"location":"postgresql/#tips","title":"Tips","text":"Best Practices <ul> <li> <p>Optimize your database: Use the appropriate indexes, and partition your data to improve performance.</p> </li> <li> <p>Use projections and coordinate systems: Always use the correct projection and coordinate system for your data. PostGIS provides functions for transforming between coordinate systems and projections.</p> </li> <li> <p>Keep your database clean: Regularly clean up your database by vacuuming, analyzing, and deleting unnecessary data.</p> </li> <li> <p>Use transactions: Use transactions to ensure that your database operations are atomic and consistent. This can prevent data corruption and improve performance.</p> </li> <li> <p>Use a backup strategy: Create and maintain regular backups of your database to prevent data loss.</p> </li> <li> <p>Document your database: Document your database schema, data structures, and other important details to ensure that others can understand and use your database.</p> </li> </ul> Learn more about PostgreSQL + PostGIS <p>Learn More: About PostgreSQL</p> <p>Learn More: About PostGIS</p>"},{"location":"pro/","title":"ArcGIS Pro on DAS GAE","text":""},{"location":"pro/#initial-set-up","title":"Initial Set-up","text":"Connect your ArcPro License - External Users (@ext.statcan.ca) <p>For external users, DAS is a Bring your Own License service.</p> <ol> <li> <p>In the ArcGIS Pro application, go to the \"Project\" tab in the ribbon.</p> </li> <li> <p>Click on \"Licensing\" in the \"Project\" tab.</p> </li> <li> <p>In the Licensing pane, select the \"ArcGIS Online\" option.</p> </li> <li> <p>Click on the \"Sign In\" button and provide your ArcGIS Online credentials (username and password) to sign in to your ArcGIS Online account.</p> </li> <li> <p>Once signed in, ArcGIS Pro will verify your license entitlements and activate the software using your ArcGIS Online license.</p> </li> </ol> Connect your ArcPro License - StatCan Employees - Internal Users About your ArcGIS Pro license <p>ArcGIS Pro licenses are managed by the StatCan GeoHelp team. This is the same license that you use to access ArcGIS Pro on NetA-B/AVD.  </p> <p>Please contact GeoHelp for assistance: geohelp@statcan.gc.ca</p> <ol> <li> <p>In the Settings Menu, select \"Licensing\" from the list on the left-hand side. It is normal for the license manager to take several minutes to initialize.</p> </li> <li> <p>Click on the Configure your licensing options </p> </li> <li> <p>In the License Type drop-down, select the Concurrent Use option.</p> </li> <li> <p>In the License Manager field, enter the hostname: 5200@stmcapp-200statcan.ca </p> </li> <li> <p>Click on the \"Ok\" button to save your changes.</p> </li> <li> <p>Restart ArcGIS Pro to activate the new license settings.</p> </li> </ol> <p>Once you have connected to the concurrent license server, you should be able to see the Licenses for the ArcGIS Pro software and any extensions that are included.</p> Connect Pro to DAS Enterprise Portal <p>A connection to the DAaaS GEO ArcGIS Enterprise Portal needs to be established in order to publish from ArcGIS Pro to the Portal.  Follow these steps:</p> <ol> <li> <p>a: From the ArcGIS Pro home screen select Settings, then select Portals </p> <p>OR</p> <p>b: Within a project right-click your name at the top right of the window and select: Manage Portals </p> </li> <li> <p>Select Add Portal and enter the following URL: https://geoanalytics.cloud.statcan.ca/portal/ </p> </li> <li> <p>The connection will then be listed.  Select the more button '...', then select Sign in.      We also suggest after the connection is completed you select the  Set As Active Portal from the more... drop-down.</p> </li> <li> <p>A browser window will open, click the 'Azure Cloud Login' login button and follow the prompts.  Once Azure authentication is completed, you will be returned to the ArcGIS Pro screen.</p> <p></p> <p>Learn more about Self-Registering in the Portal</p> <p>Learn more: Manage portal connections from ArcGIS Pro</p> </li> </ol>"},{"location":"pro/#adding-data-to-your-project","title":"Adding Data to your Project","text":"Adding data from a field or local folder <ol> <li>In the Catalog pane, which is typically located on the right side of the ArcGIS Pro interface, Right-click Folders, select Add Folder Connection, locate your desired folder, and select. </li> <li> <p>Expand the data source that contains the data you want to add. For example, if you have shapefiles stored in a folder, expand the folder.</p> </li> <li> <p>Locate the specific dataset you want to add to your project. </p> </li> <li> <p>To add the data to the current map, simply drag and drop the dataset onto the map view or right-click on the dataset and select \"Add To Current Map\" or \"Add To Project.\" </p> </li> <li> <p>After adding the data, it will be visible in the Contents pane, which is typically located on the left side of the ArcGIS Pro interface. You can interact with the added data by selecting it in the Contents pane and using the available tools and functionalities along the top.</p> </li> </ol> Connect to a PostgreSQL Database <p>GAE has streamlined the ArcGIS Pro-PostgreSQL connection process by utilizing a .sde file connection.</p> <ol> <li> <p>In the Catalog pane, right-click Databases and select Add Database </p> </li> <li> <p>In the new window, expand This PC and located your project file share (mounted as a drive) </p> </li> <li> <p>Select the .sde file, and click Ok</p> </li> <li> <p>The PostgreSQL database will not appear under Databases in the Catalog pane.</p> </li> </ol> <p>Learn More: ArcGIS Pro Documentation</p> Importing data from ArcGIS Enterprise <p>As a member on GAE, you will have either a Project Member or Project Viewer user role. The same priviledges will carry across both ArcGIS Enterprise and ArcGIS Pro.</p> <p>Both users with the Project Member and Project Viewer roles will have the ability to consume (view) shared data from their project groups in ArcGIS Pro asd well as perosnal data.</p> <p>In the Catalog pane (if the Catalog pane is closed, click the View tab on the main ribbon. In the Windows group, click Catalog Pane), select the Portal tab. The same Content tabs from ArcGIS Enterprise will appear; My Content, My Favorites, My Groups, My Organization, ArcGIS Enterprise, and Living Atlas.  </p>"},{"location":"pro/#conducting-analysis","title":"Conducting Analysis","text":"Analysis via Toolbar <p>Once you have added the necessary data to your project:</p> <ol> <li> <p>In the Analysis tab of the ArcGIS Pro ribbon, click on the \"Toolboxes\" button. The Toolboxes button provides access to various geoprocessing toolboxes.</p> </li> <li> <p>Browse and explore the available toolboxes to find the one that contains the specific tools you need for your analysis. Toolboxes are organized based on their functionality, such as Data Management, Spatial Statistics, Conversion, and more. </p> </li> <li> <p>Expand the selected toolbox to view its contents, which include individual geoprocessing tools.</p> </li> <li> <p>Locate the tool that you want to use for your analysis. Each tool performs a specific function and may require specific input parameters.</p> </li> <li> <p>Double-click on the tool to open its dialog box. The dialog box allows you to set the input parameters and configure the tool settings.</p> </li> <li> <p>Fill in the required parameters, such as input data, output locations, and any other relevant information. The parameter names and options will vary based on the selected tool.</p> </li> <li> <p>Review the tool's documentation or help resources if you need more information about the parameters or how the tool works.</p> </li> <li> <p>Once you have set the parameters, click on the \"Run\" or \"Execute\" button to start the analysis using the selected tool. The tool will process the data and generate the output based on your specified parameters.</p> </li> <li> <p>After the analysis is complete, you can examine and explore the results. The output may be displayed on the map, in the Geoprocessing pane, or in a new layer or table.</p> </li> </ol> <p>Learn more about the available tools here</p> Analysis via ModelBuilder (reusable) What is ModelBuilder? <p>ModelBuilder in ArcGIS Pro is a visual tool for creating automated spatial analysis workflows. It simplifies complex tasks, allowing you to connect tools and data visually. With ModelBuilder, you can customize your workflows, collaborate with others, and conveniently reuse your models for consistent and efficient analysis.</p> <ol> <li> <p>In the Analysis tab of the ArcGIS Pro ribbon, click on the \"ModelBuilder\" button. This will open the ModelBuilder interface; you'll see a blank canvas where you can create your geoprocessing workflow. </p> </li> <li> <p>Start building your model by adding tools to the canvas. To add a tool, you can either search for it in the search bar located on the ModelBuilder interface or navigate through the toolboxes by clicking on the \"Toolboxes\" button in the Analysis tab and selecting the desired tool.</p> </li> <li> <p>Drag and drop the selected tool onto the canvas. Connect the tools by clicking on the output connector of one tool and dragging it to the input connector of another tool. This represents the flow of data between the tools.</p> </li> <li> <p>Configure the parameters of each tool by right-clicking on it and selecting \"Properties.\" Fill in the required parameters and adjust any other settings as needed.</p> </li> <li> <p>Continue adding tools and connecting them until you have constructed your desired workflow.</p> </li> <li> <p>Test your model by clicking on the \"Run\" button in the ModelBuilder interface. This will execute the workflow and process the data based on your specified parameters.</p> </li> <li> <p>Once the model has executed successfully and produced the desired output, you can save it for future use. To save the model, go to the File menu and select \"Save\" or \"Save As.\" Choose a location and provide a name for the model, then click \"Save.\" The model will be saved with a .tbx file extension, which represents a ModelBuilder toolbox.</p> </li> </ol> <p>TIP: You can also create model parameters to make your model more flexible and reusable. Parameters allow you to specify input and output data locations and other variables when running the model. To create a model parameter, right-click on a tool or connector, select \"Model Parameter,\" and set the parameter properties.</p> <p>TIP: To run the model with different input data or parameter values, you can open it from the Catalog pane or the Geoprocessing pane, modify the input values or parameters, and then run it again.</p> Analysis via Python &amp; Notebook within Pro What is a Python Notebook and why use it <p>A Python Notebook in ArcGIS Pro combines code, documentation, and visualizations, providing an interactive environment for spatial analysis. It offers flexibility, advanced scripting capabilities, and integration with external Python packages, making it ideal for custom workflows and advanced analysis techniques.</p> <p>Within the notebook interface, you can start writing and executing Python code to perform your analysis. You can use various ArcPy functions, libraries, and other Python packages for spatial analysis.</p> <ol> <li> <p>From the Analysis tab, slect Python, then select either Notebook or Python Window, depending on your preference. You can start writing and executing Python code to perform your analysis in the newly opened Notebook or Python window. You can use various ArcPy functions, libraries, and other Python packages for spatial analysis. </p> </li> <li> <p>Import necessary libraries and modules by including import statements at the beginning of the notebook.  Learn how to install packages here</p> </li> <li> <p>Utilize ArcPy functions and geoprocessing tools to perform spatial analysis tasks. You can access and manipulate spatial datasets, perform calculations, run geoprocessing tools, create maps, and generate outputs. Learn more about Arcpy</p> </li> <li> <p>Write your analysis code in separate cells within the notebook. Each cell can be individually executed by clicking the \"Run\" button or using the Shift + Enter shortcut.</p> </li> <li> <p>Execute the cells sequentially to run your analysis step by step, reviewing the outputs and intermediate results as you proceed.</p> </li> <li> <p>You can add markdown cells to include explanatory text, documentation, or visualizations within the notebook to enhance readability and clarity.</p> </li> <li> <p>Save your Python Notebook periodically to preserve your code and analysis progress. Use the \"Save\" option in the notebook interface to save your changes.</p> </li> </ol> <p>TIP: After completing your analysis, you can export the Python Notebook as a standalone .ipynb file for sharing or archiving purposes.</p>"},{"location":"pro/#sharing-results","title":"Sharing Results","text":"Sharing data to ArcGIS Enterprise <p>Only users with the Project Member role will have the ability upload and share content to the Portal.</p> <p>Right click on a layer in the Contents pane (if the Contents pane is closed, click the View tab on the main ribbon. In the Windows group, click Contents) and select Sharing &gt; Share as Web Layer from the drop down menu. A new Share As Web Layer window will appear.  </p> Archiving your Project <p>Add Metadata!</p> <p>Data Layers and Tables:</p> <ol> <li>Right-click layer/table in Contents pane.</li> <li>Select \"Properties.\", Go to \"Metadata\" tab.</li> <li>Click \"Edit\" and fill in details. Save .</li> </ol> <p>ModelBuilder:</p> <ol> <li>Go to \"Model\" menu, Go to \"Model Properties.\", Open \"Metadata\" tab.</li> <li>Click \"Edit\" and provide details. Save metadata.</li> </ol> <p>Python Notebooks/Scripts:</p> <ul> <li>Notebooks: Add markdown cells with metadata (title, description, author).</li> <li>Scripts: Include comments at the beginning for metadata (purpose, author, description).</li> </ul> <p>Package Your Project</p> <p>ArcGIS Pro provides a packaging tool that allows you to create a project package containing all the project data, maps, and analysis settings. </p> <p>To package your project, go to the Share tab in the ArcGIS Pro ribbon and click on the \"Project\" button. </p> <p>Follow the prompts to specify the package settings, including the output location, package name, and any data or analysis options you wish to include. This package will serve as a self-contained archive of your project.</p> <p>Export Data</p> <p>If you have specific data layers or analysis results that you want to archive separately, you can export them from ArcGIS Pro. </p> <p>Right-click on the data layer or result in the Contents pane, select \"Data\" or \"Export,\" and choose the desired export format. </p> <p>Save the exported data to a location of your choice for archiving.</p>"},{"location":"pro/#learn-more","title":"Learn More:","text":"Best Practices <ul> <li> <p>Organize your data: Create a logical folder structure and use descriptive names for your layers and datasets to make them easy to find and understand.</p> </li> <li> <p>Limit the number of folders: Don't create too many levels of folders within your project, as this can make it difficult to navigate and locate items. Limit the number of levels to no more than three or four.</p> </li> <li> <p>Use subfolders sparingly: Use subfolders only when necessary, such as when you have a large number of items or need to organize them by location or theme.</p> </li> <li> <p>Separate working data from published data: Keep your working data separate from your published data. This can help prevent accidental modification or deletion of important data.</p> </li> <li> <p>Use the project pane: Use the Project pane to manage your data, maps, and layouts. This makes it easy to switch between different parts of your project.</p> </li> <li> <p>Use bookmarks: Use bookmarks to save specific views of your map. This makes it easy to return to a specific location and zoom level.</p> </li> <li> <p>Use labeling wisely: Use labeling sparingly and make sure it is clear and easy to read. Consider using halo or background fills to make labels stand out.</p> </li> <li> <p>Use symbology consistently: Use consistent symbology across your maps to make them easier to read and understand.</p> </li> <li> <p>Document your work: Document your work using the metadata tools in ArcGIS Pro. This makes it easy to share your work with others and helps you keep track of changes over time.</p> </li> <li> <p>Use map packages: Use map packages to share your maps and data with others. This ensures that all the necessary data and settings are included.</p> </li> <li> <p>Use Geodatabases over shapefiles: Overall, geodatabases are a more robust and versatile data storage format than shapefiles.</p> </li> <li> <p>Optimize your workflow: Optimize your workflow by using the tools and shortcuts available in ArcGIS Pro. This can save you time and help you work more efficiently.</p> </li> <li> <p>Take advantage of resources: Take advantage of the ArcGIS Pro documentation, training, and user communities to learn more about best practices and to get help when you need it.</p> </li> </ul> ArcGIS Pro Official Documentation <p>Learn More: ArcGIS Pro Official Documentation</p>"},{"location":"python/","title":"Python","text":"<p>Geospatial analysis mainly uses Python for several reasons:</p> <ol> <li> <p>Rich ecosystem of geospatial libraries: Python has a vast collection of specialized geospatial libraries such as GeoPandas, Shapely, Fiona, and PySAL, which provide powerful tools for handling geospatial data, performing spatial operations, and conducting advanced geospatial analysis.</p> </li> <li> <p>Integration with other data science and analysis libraries: Python's popularity in the data science community and its extensive ecosystem of data analysis libraries such as NumPy, Pandas, and Matplotlib make it an ideal choice for geospatial analysis. Python allows seamless integration of geospatial analysis with other data processing and visualization tasks.</p> </li> <li> <p>Flexibility and versatility: Python is a versatile programming language known for its flexibility. It allows users to combine geospatial analysis with other functionalities, such as machine learning, statistical analysis, and web development. Python's flexibility enables the creation of custom workflows and tailored solutions for specific geospatial analysis needs.</p> </li> <li> <p>Ease of use and readability: Python is renowned for its readability and user-friendly syntax. Its clear and concise code structure makes it easier for both beginners and experienced programmers to understand and write geospatial analysis scripts and workflows. Python's readability contributes to better collaboration and maintainability of geospatial projects.</p> </li> <li> <p>Active community support: Python benefits from a large and active community of geospatial analysts, developers, and researchers who contribute to the development and improvement of geospatial libraries and tools. The availability of extensive documentation, tutorials, and online resources makes it easier for users to learn, troubleshoot, and get assistance when working on geospatial analysis projects.</p> </li> </ol> <p>While Python is widely used in geospatial analysis, it is important to note that other programming languages like R, Java, and C++ also have their own geospatial libraries and ecosystems. The choice of programming language ultimately depends on specific project requirements, personal preferences, and existing expertise.</p>"},{"location":"python/#virtual-environments","title":"Virtual Environments","text":"Best Practice: Working with Conda Virtual Environments <p>Using virtual environments with Conda can help you create consistent, reproducible, and isolated environments for your projects, which can save time and prevent issues caused by conflicting dependencies or system-level changes.</p> <p>For example, ArcGIS products function best with python 3.7.  By creating a separate ArcGIS environment you can install 3.7 without causing conflicts with the modern python 3.10 release.</p> Create a new environment <p><pre><code>conda create --name &lt;env_name&gt; &lt;package&gt;\n</code></pre> example: <pre><code>conda create --n geoENV python=3.7\n</code></pre></p> Activate your environment <pre><code>conda activate &lt;env_name&gt;\n</code></pre>"},{"location":"python/#installing-packages","title":"Installing package(s)","text":"Common Geo-Specific Packages available <p>This list is not exhaustive, but here are some of the common packages:</p> <pre><code>- GeoPandas\n- Shapely\n- Fiona\n- GDAL/OGR\n- PyProj\n- Cartopy\n- Rasterio\n- Geoplot\n- Basemap\n- Bokeh\n- PySAL\n- Spatial Pandas\n- NetworkX\n- PyShp\n- TileStache\n- GdalUtils\n- Scipy\n- PyTopo\n- Geopy\n- Plotly\n</code></pre> Conda <p>DAaaS utilizes Artifactory for package and library management: <pre><code>https://jfrog.aaw.cloud.statcan.ca/artifactory/conda-forge-remote\n</code></pre></p> <p>To use:</p> <p>Miniforge (conda) has been preconfigured to use the DAS Artifactiry. You should not need to specify the channel.  If this fails, we have included examples on direct connections after the simple examples:</p> <pre><code>conda install [package]\n</code></pre> <p>For specific versions <pre><code>conda install geopandas\nconda install matplotlib=3.7.0\n</code></pre></p> <p>Connecting directly to the artifactory channel:</p> <pre><code>conda install -c https://jfrog.aaw.cloud.statcan.ca/artifactory/conda-forge-remote/ [package]\nconda install -c https://jfrog.aaw.cloud.statcan.ca/artifactory/conda-forge-remote/ [package=X.X...]\n</code></pre> <p>Confirm your package installation <pre><code>conda list\n</code></pre></p> Conda Cheat Sheet <p></p> <p>Link to full Conda cheat sheet</p> PIP <p>PIP has also been preconfigured to use the DAS artifactory custom index:</p> <pre><code>pip install [package] \n</code></pre> <pre><code>pip list\n</code></pre> <p>If that fails and you need to specify the index url:</p> <pre><code>pip install --index-url https://jfrog.aaw.cloud.statcan.ca/artifactory/api/pypi/pypi-remote/simple &lt;package-name&gt;\n</code></pre>"},{"location":"python/#some-basic-examples","title":"Some Basic Examples","text":"Connect to GAE ArcGIS Portal (Enterprise) <p>Your project group will be provided with a Client ID upon onboarding which will be used to connect to the ArcGIS Enterprise Portal. Paste the Client ID in-between the quotations <pre><code>from arcgis.gis import GIS\ngis = GIS(\"https://geoanalyticsdev.cloud.statcan.ca/portal\", client_id=' ')\nprint(\"Successfully logged in as: \" + gis.properties.user.username)\n</code></pre> This will trigger a pop-up window  to authenticate, then provide you with a key to enter into the IDE</p> Convert a WFS into pandas DataFrame <pre><code>import geopandas as gpd\n# Set WFS URL and layer name\nwfs_url = 'https://mywfs.com/wfs'\nlayer_name = 'my_layer'\n# Read WFS into a geopandas dataframe\ngdf = gpd.read_file(wfs_url, layer=layer_name)\n# Convert geopandas dataframe to pandas dataframe\ndf = gdf.drop(columns='geometry')\n# Preview the dataframe\nprint(df.head())\n</code></pre> Shapefile to GeoDataFrame (Spatial DataFrame) <pre><code>import geopandas as gpd\n# Define the path to the shapefile\nshapefile_path = 'path/to/your/shapefile.shp'\n# Use geopandas to read the shapefile into a GeoDataFrame\ngdf = gpd.read_file(shapefile_path)\n# Print the GeoDataFrame\nprint(gdf)\n</code></pre> Export a GeoDataFrame to ArcGIS Enterprise <pre><code>from arcgis.gis import GIS\nimport geopandas as gpd\n# Define the URL of your ArcGIS Enterprise portal\nportal_url = 'https://geoanalytics.cloud.statcan.ca/portal/'\n# Create a connection to your portal\ngis = GIS(portal_url, client_id='')\n# Define the name of the feature layer to be created\nlayer_name = 'your_layer_name'\n# Publish the GeoDataFrame to your portal as a feature layer\nfeature_layer = gis.content.import_data(gdf, title=layer_name)\n# Print the URL of the feature layer\nprint(feature_layer.url)\n</code></pre> Join CSV to SHP(as sdf) then Export to ArcGIS Enterprise <p><pre><code>import pandas as pd\nfrom arcgis.gis import GIS\nfrom arcgis.features import SpatialDataFrame\n# Load the CSV file into a Pandas dataframe\ncsv_df = pd.read_csv('path/to/csv_file.csv')\n# Load the spatial data into a SpatialDataFrame using ArcGIS API for Python\nsdf = SpatialDataFrame.from_featureclass('path/to/spatial_data.shp')\n# Join the CSV dataframe to the spatial dataframe based on a common field\njoined_sdf = sdf.merge(csv_df, on='common_field')\n# Export the joined spatial dataframe to ArcGIS Enterprise using the ArcGIS API for Python\ngis = GIS('https://geoanalytics.cloud.statcan.ca/portal/', client_id='')\njoined_fc = joined_sdf.spatial.to_featureclass(location='path/to/output.gdb', overwrite=True)\njoined_item = gis.content.add({'type': 'Feature Service', 'title': 'Joined Data', 'tags': 'Data'}, data=joined_fc)\njoined_item.publish()\n</code></pre> This code first loads a CSV file into a Pandas dataframe using the pd.read_csv() function. It then loads a spatial dataset into a SpatialDataFrame using the SpatialDataFrame.from_featureclass() method of the ArcGIS API for Python. The two dataframes are then joined based on a common field using the merge() method of the SpatialDataFrame.</p> <p>Finally, the joined SpatialDataFrame is exported to a feature class using the spatial.to_featureclass() method of the SpatialDataFrame, and then published to ArcGIS Enterprise using the gis.content.add() and publish() methods of the ArcGIS API for Python. Note that you will need to replace the example paths and server URL with the actual paths and URL for your data and ArcGIS Enterprise instance.</p> GeoCode a dataframe using OSM API <p><pre><code>import requests\nimport pandas as pd\ndef geocode_address(address):\n\"\"\"\n    Geocode a single address using the OpenStreetMap API\n    \"\"\"\nurl = \"https://nominatim.openstreetmap.org/search\"\nparams = {\n\"q\": address,\n\"format\": \"json\"\n}\nresponse = requests.get(url, params=params)\nif response.ok:\nresults = response.json()\nif len(results) &gt; 0:\nreturn results[0]\nreturn None\ndef geocode_dataframe(df, address_column):\n\"\"\"\n    Geocode a Pandas dataframe using the OpenStreetMap API\n    \"\"\"\n# Create a new dataframe to store the geocoding results\ngeocoded_df = pd.DataFrame(columns=[\"latitude\", \"longitude\"])\n# Loop through each row in the original dataframe\nfor index, row in df.iterrows():\n# Get the address from the specified column\naddress = row[address_column]\n# Geocode the address using the OpenStreetMap API\nresult = geocode_address(address)\nif result:\n# Add the latitude and longitude to the new dataframe\ngeocoded_df.loc[index] = [result[\"lat\"], result[\"lon\"]]\nelse:\n# If geocoding failed, add NaN values to the new dataframe\ngeocoded_df.loc[index] = [float(\"NaN\"), float(\"NaN\")]\n# Add the new columns to the original dataframe\ndf[\"latitude\"] = geocoded_df[\"latitude\"]\ndf[\"longitude\"] = geocoded_df[\"longitude\"]\nreturn df\n</code></pre> To use this code, simply call the geocode_dataframe function with your Pandas dataframe and the name of the column that contains the address data. This will add two new columns to the dataframe, \"latitude\" and \"longitude\", which contain the geocoded coordinates for each address. Note that this code uses the requests library to make HTTP requests to the OpenStreetMap API, so you'll need to make sure that it's installed in your environment before running the code. At this time, the OSM API is blocked by the firewall</p> Raster Analysis with GDAL <p><pre><code>from osgeo import gdal\nimport numpy as np\n# Open the raster file\nraster_ds = gdal.Open('path/to/raster.tif')\n# Read the raster band into a NumPy array\nraster_band = raster_ds.GetRasterBand(1)\nraster_array = raster_band.ReadAsArray()\n# Perform some analysis on the raster data\n# For example, calculate the mean pixel value\nmean_value = np.mean(raster_array)\n# Print the result\nprint('Mean pixel value: {}'.format(mean_value))\n</code></pre> This code opens a raster file using the gdal.Open() method and reads the first band of the raster into a NumPy array using the ReadAsArray() method of the gdal.Band object. It then performs some analysis on the raster data, in this case calculating the mean pixel value using the np.mean() function from NumPy. Finally, it prints the result to the console.</p> <p>You can modify this code to perform other types of analysis on the raster data, such as calculating the minimum, maximum, or standard deviation of the pixel values, or performing calculations between multiple bands. GDAL provides a wide range of functions and tools for working with raster data, so the possibilities are nearly endless.</p>"},{"location":"python/#learn-more","title":"Learn More","text":"<p>Learn more about about Artifactory</p> <p>Learn more about Conda</p>"},{"location":"qgis/","title":"QGIS - Free and Open Source","text":"What is QGIS <p>QGIS is free geospatial analysis desktop software that provides a intuitive user interface and supports a wide variety of data types and formats.</p> <p>QGIS provides a large number of basic GIS analysis functions and visualizations; and the option to download extension for more complex analysis. </p>"},{"location":"qgis/#getting-started","title":"Getting Started","text":"QGIS on a VM <p>QGIS comes installed on your VM by default. It can be found under the start menu:     </p> AAW <p>QGIS is also available on the Remote Desktops available through the AAW.</p> <p> Setting up a workspace in the AAW:   Learn how to deploy a remote desktop in the AAW environment </p>"},{"location":"qgis/#importing-data","title":"Importing Data","text":"Connect to a PostgreSQL Database <p>QGIS &amp; PostgreSQL+PostGIS 1. Under the browser tab, Right-click PostgreSQL, and select New Connection</p> <p></p> <ol> <li> <p>A new window will open:</p> <p></p> </li> <li> <p>Enter the following information:</p> Field Entry Name Your chosen name(alias) for the database Host Database Instance see onboarding info Port 5432 Database The true name of the database see onboarding info SSL mode allow Authentication *Press the green + button, then enter your cloud info Also list tables with no geometry YES **All other fields can be left blank </li> <li> <p>Select Test Connection</p> </li> <li> <p>The database will now appear under the PostgreSQL heading in the QGIS Browser</p> </li> </ol> Adding a Layer- Drag and Drop <ol> <li>Locate your data files in your windows file explorer.</li> <li>Select the data files you want to add (e.g., shapefiles, raster files).</li> <li>Drag and drop the selected files into the QGIS window. The data will be added as layers to the project.</li> </ol> Adding a Layer- Data Source Manager <ol> <li>Go to the \"Layer\" menu and select \"Add Layer\" &gt; \"Add Vector Layer\" or \"Add Raster Layer\" (depending on your data type).</li> <li>In the Data Source Manager dialog box, click the \"Browse\" button and navigate to the location where your data is stored.</li> <li>Select the data file(s) you want to add and click \"Open\" to add them to the project. </li> </ol> Adding a Layer- Quick Map Layer <ol> <li>Click on the \"Quick Map Layer\" icon in the toolbar.</li> <li>In the dialog box, choose the type of data you want to add (e.g., shapefile, raster).</li> <li>Browse to the location of your data file and select it.</li> <li>Click \"Add\" to add the data as a layer to the project.</li> </ol>"},{"location":"qgis/#analysis","title":"Analysis","text":"Using QGIS Processing Tools <ol> <li> <p>Access Analysis Tools: In the QGIS interface, locate the processing toolbox. It can typically be found either in the main menu under \"Processing\" or as an icon in the toolbar. Click on the processing toolbox to open it. </p> </li> <li> <p>Choose Analysis Tool: Browse through the available analysis tools organized in different categories. These tools cover various aspects of geospatial analysis, such as spatial statistics, proximity analysis, data management, and more.</p> </li> <li> <p>Configure Tool Parameters: Once you have selected an analysis tool, a dialog box will appear where you can configure the tool's parameters. Depending on the specific tool, you may need to specify input layers, set analysis parameters, define output options, and adjust other settings.</p> </li> <li> <p>Run Analysis: After configuring the tool parameters, click \"Run\" or \"OK\" to execute the analysis. The tool will process the data based on the specified parameters and generate the desired output.</p> </li> </ol>"},{"location":"qgis/#training","title":"Training","text":"SGC's QGIS Videos <p>STC's Statistical Geomatics Centre has produced an online lecture series that provides an into to QGIS.  These videos are great for beginners, those transitioning from a COST product to QGIS, and for the advanced user to get a refresher.</p> <p>Video 1 - What is GIS, and why use QGIS (external link)</p> <p></p> <p> View the  Full Lecture Series Catalog (external link)</p> QGIS Cheat Sheet <p></p>"},{"location":"qgis/#learn-more","title":"Learn More","text":"Helpful Links <ul> <li> <p>QGIS Documentation</p> </li> <li> <p>QGIS + Azure Documentation</p> </li> <li> <p>Line 45- Using QGIS with PostGIS: A Dynamic Duo (whitepaper - English only)</p> </li> <li> <p> QGIS Official Training Manual </p> </li> <li> <p> QGIS Python Plugins Repository </p> </li> <li> <p> QGIS Tutorial and Tips </p> </li> </ul> Best Practices <ul> <li> <p>Use a Project File: Always start by creating a project file for your work. This helps you keep your layers organized and makes it easy to share your work with others.</p> </li> <li> <p>Use Layer Styling: QGIS provides a lot of options for layer styling. Use them to make your maps look better and more professional.</p> </li> <li> <p>Keep Your Data Organized: Keep your data organized and up to date. Use descriptive file names and keep your data in logical folders.</p> </li> <li> <p>Use Plugins: QGIS has a large community of developers who create plugins to extend its functionality. Take advantage of these plugins to make your work easier and more efficient.</p> </li> <li> <p>Use Projections: Make sure you understand projections and use them appropriately. This will help ensure that your data is accurate and that your maps are meaningful.</p> </li> <li> <p>Learn Keyboard Shortcuts: QGIS has a lot of keyboard shortcuts that can save you time and effort. Take the time to learn them and you'll be more productive.</p> </li> <li> <p>Use the QGIS Community: QGIS has a large and active community of users and developers. Use the community to learn more about the software, get help with problems, and share your work with others.</p> </li> </ul>"},{"location":"qgis_maps/","title":"QGIS Static Maps","text":"<p>In QGIS, you can also generate static maps by exporting the current view or layout to various image formats. This allows you to capture and save a snapshot of your map without interactive functionality. Here's how you can create maps in QGIS:</p> View-based static maps <ol> <li>Adjust the desired extent, zoom level, and map layers in the QGIS map canvas.</li> <li>Go to the \"Project\" menu and select \"Save as Image\" or use the shortcut Ctrl+Alt+S.</li> <li>Choose the image format (e.g., PNG, JPEG) and specify the output location and file name.</li> <li>Set additional options like resolution, image size, and background color if needed.</li> <li>Click \"Save\" to generate the static map based on the current view.</li> </ol> Layout-based static maps <ol> <li>Switch to the \"Layout\" view in QGIS.</li> <li>Design and arrange the map elements, such as title, legend, and scale bar, within the layout.</li> <li>Go to the \"Layout\" menu and select \"Export as Image\" or use the shortcut Ctrl+Alt+E.</li> <li>Specify the image format, output location, and file name.</li> <li>Configure additional settings like resolution, image size, and background color if desired.</li> <li>Click \"Export\" to create the static map based on the configured layout.</li> </ol> Map Styling and Symbology <ol> <li>Select the layer you want to style in the \"Layers\" panel.</li> <li>Right-click on the layer and choose \"Properties\" to open the layer properties window.</li> <li>In the \"Symbology\" tab, choose different symbolization methods based on your data type, such as categorized, graduated, or rule-based symbology.</li> <li>Customize the symbology settings according to your preferences. Change colors, sizes, line styles, and other visual properties to represent your data effectively.</li> <li>Apply any additional styling options, such as label placement, transparency, or blending modes.</li> <li>Preview and review the styled map to ensure it meets your requirements.</li> <li>Save the styled map or apply it to a layout for printing or further analysis.</li> </ol>"},{"location":"quick/","title":"Getting Started","text":"<p>This page provides short, summarized help for common FAQs. Each help block links to a more detailed guide for further information.</p> How to launch your VM - External Users <ol> <li>Visit: DAS Portal</li> <li>Sign in using your @ext.statcan.ca account</li> <li>Scroll down to the bottom of the page, select your VM</li> <li>In the Azure page which opens, Start your VM, then use 'Browser Connect'</li> <li>Enter your credentials, your VM will open in a new tab (ensure pop-ups are allowed)</li> </ol> How to launch your VM - StatCan Employees Prerequisites <p>You have already claimed your VM </p> <p>Full Help: Link to VM Help Page</p> <p>Quick Help:</p> <ol> <li>Access the Azure Portal: https://portal.azure.com/#home</li> <li>Select More Services and search for: DevTest Labs</li> <li>Ensure Subscription Equals is set to ALL</li> <li>Select geop-prod-intuser-dtl</li> <li>Locate and Select your VM</li> <li>Select Start, wait for confirmation, Select Browser Connect</li> <li> Remember to STOP your VM when finished </li> </ol> Acccess ArcGIS Enterprise Portal Interface <p>Full Help: Link to Help ArcGIS Enterprise Portal Page</p> <p>Quick Help:</p> <ol> <li>Access via this URL: DAS GEA Enterprise Portal</li> <li>Click the StatCan Azure Cloud Login</li> <li>If this is your first time accessing it, you will have to do some registration steps, then contact DAS GEA to have your account configured</li> </ol> Connect to GAE ArcGIS Enterprise Portal via API <p>Your project group will be provided with a Client ID upon onboarding which will be used to connect to the ArcGIS Enterprise Portal. Paste the Client ID in-between the quotations <pre><code>from arcgis.gis import GIS\ngis = GIS(\"https://geoanalyticsdev.cloud.statcan.ca/portal\", client_id=' ')\n#This will trigger a pop-up window  to authenticate, then provide you with a key to enter into the IDE\nprint(\"Successfully logged in as: \" + gis.properties.user.username)\n</code></pre></p> How to access your Database <p>Full Help: Link to PostgreSQL+PostGIS Help Page</p> <p>In ArcPro </p> <ol> <li> <p>In the Catalog pane, right-click Databases and select Add Database</p> </li> <li> <p>In the new window, expand This PC and located your project File-share (mounted as a drive), select the .sde file</p> </li> </ol> <p> In QGIS</p> <ol> <li> <p>Under the browser tab, Right-click PostgreSQL, and select New Connection</p> </li> <li> <p>Enter the following information:</p> <ul> <li>Name = chosen name(alias) for the database</li> <li>Host = Database Instance see project file-share</li> <li>Port = 5432</li> <li>Database = The true name of the schema see project file-share</li> <li>SSL mode = allow</li> <li>Authentication = Press the green + button, then see project file-share*</li> <li>Also list tables with no geometry = YES </li> </ul> </li> <li> <p>Select Test Connection</p> </li> </ol> <p> With python <pre><code>    import psycopg2\nconn = psycopg2.connect(\ndbname=\"your_database_name\",\nuser=\"your_username\",\npassword=\"your_password\",\nhost=\"your_host\",\nport=5432\n)\nquery = \"SELECT * FROM your_table;\nconn.close()\n</code></pre></p> How to access your Field Filer (Internal users) <p>Full Help: Link to Full Help page</p> <ol> <li> <p>Open Windows File Explorer</p> </li> <li> <p>Paste FieldFiler path into the address bar AND append .statcan.ca to the path</p> <p>example:  \\\\filer03.statcan.ca</p> </li> <li> <p>Authenticate     Username:  Add stc\\  before your username</p> <p>example:  stc\\namenick </p> </li> <li>Locate the root folder, right click, Map Network Drive</li> </ol> How to contact DAS GAE <p>Full Help: Link to Contact Help Page</p> <p>Quick Help:</p> <p>Email: statcan.dassupport-soutiendelads.statcan@statcan.gc.ca</p> <p>For StatCan Employees, please submit a ticket via Jira:</p> <ol> <li>Open Statistics Canada Jira software: DAS Geospatial Environment (DASGAE)</li> <li>From the Menu Bar, select the button \u201cCreate\u201d:</li> <li>In the Jira Create Issue Window, Select the Issue Type = \u201cClient Support\u201d:</li> <li>In the Jira Create Issue window, enter the information related to your request</li> </ol> Useful DAS Links <p>DAS GAE ArcGIS Portal</p> <p>Collaborative Analytics Environment</p> <p>CAE Self-Help Guidebook</p> <p>Advanced Analytics Workspace</p> <p>AAW Self-Help Guidebook</p> <p>ESRI ArcGIS Enterprise Portal Help</p> <p>Azure Help Documents</p> <p>QGIS Help Documents</p> <p>Federal Geospatial Platform</p> <p>DAS Acronyms &amp; Terms</p> Term Description/Meaning DAS Data Analytics Services GAE Geospatial Analytic Environment AAW Advanced Analytics Workspace [link] CAE Creative Analytic Environment [link] FAIR(FDI) Findable, Accessible, Interoperable, Reusable; Data Infrastructure &amp; Pipelines Jira Support ticketing and tracking software in STC VM Virtual Machine(s) GPU Graphics processing unit; GEA VMs AVD Azure Virtual Desktop 2(M)FA Two+ factor authentication Azure ID StatCan Cloud login; first.last@cloud.statcan.ca"},{"location":"resources/","title":"Learning Resources","text":""},{"location":"resources/#geospatial-resources","title":"Geospatial Resources","text":"<p>GeoSpatial Training Services</p> <p>Awesome Geospatial; Long list of geospatial analysis tools</p> <p>Geographic Information Systems Stack Exchang</p>"},{"location":"resources/#esri-arcgis-resources","title":"ESRI &amp; ArcGIS Resources","text":"<p>ESRI Training; ArcGIS Pro, ArcGIS Enterprise, ArcGIS Insights</p> <p>Esri Community; A global community of Esri users where you can find solutions, share ideas, and collaborate to solve problems with GIS</p> <p>ArcGIS API for Python Help</p> <p>ArcGIS REST JS modules</p> <p>ArcPY Help</p>"},{"location":"resources/#qgis-resources","title":"QGIS Resources","text":"<p>QGIS Training Manual</p> <p>QGIS Tutorials &amp; Examples</p> <p>Statistics Canada QGIS Training Videos</p>"},{"location":"resources/#postgresql-postgis-resources","title":"PostgreSQL +PostGIS Resources","text":"<p>PostgreSQL Official Documentation</p> <p>PostgreSQL Tutorial(s)</p> <p>PostGIS Documents </p> <p>SQL Tutorial(s) for beginners</p>"},{"location":"resources/#azure-resources","title":"Azure Resources","text":"<p>Azure and other Microsoft technologies</p> Know of a good resource? <p>Help us expand this section; submit a learning resource:</p> <p>statcan.dasgae-sadeag.statcan@statcan.gc.ca</p>"},{"location":"sdmx/","title":"SDMX","text":"What is SDMX? <p>SDMX, which stands for Statistical Data and Metadata eXchange is an international initiative that aims at standardizing and modernizing (\u201cindustrializing\u201d) the mechanisms and processes for the exchange of statistical data and metadata among international organizations and their member countries.</p> <p>Simply, SDMX is a new technology that simplifies the transmission of statistical data. SDMX is a standard and technology to style and transmit data using machine-to-machine language. It is a:</p> <ul> <li>Logical model to describe and structure content</li> <li>Standard for automatic communication</li> <li>Technology supporting standardization</li> </ul>"},{"location":"sdmx/#sdmx-at-stc","title":"SDMX at STC","text":"<p>Currently, Census Profile information is available at all geography levels via an SDMX API.  This providers a modern, streamlines method of connecting to Statistic's Canada Census data.</p> <p>In the near future, all CODAR products will be available via an SDMX API.  A small example is included below.</p> <p> Learn more about the 2021 Census Profile SMDX API </p> <p></p> <p>NOTE: This feature is still under exploration. As GAE continues to explore and learn about SDMX, we are excited about the possibilities it offers to improve our ability to derive insights from data.</p>"},{"location":"sdmx/#api-example","title":"API Example","text":"<p>STC Census Profile SDMX Python API<pre><code>import pandas as pd\nimport pandasdmx as sdmx\ninfo = {\n\"id\": \"STC_CP\",\n\"url\": \"https://api.statcan.gc.ca/census-recensement/profile/sdmx/rest\",\n\"name\": \"STC Census Profiles\"\n}\nsdmx.add_source(info, id=None, override=True)\nstc = sdmx.Request('STC_CP')\nresp = stc.data('df_pr')\n#df_pr- Canada, provinces and territories dataflow\ndata = resp.to_pandas()\n#returns a series with a multi-index, \"2-d series; 3-d data frame\"\ndata\n</code></pre> The code above returns this multi-index data frame:  After conditioning of the Ref_Area column, you can then join it to a spatial data frame or geography layer.</p> Dataflow code Name of Dataflow DF_PR * Canada, provinces and territories  used in example above DF_ADA aggregate dissemination area DF_CD census divisions DF_CMACA census metropolitan areas and census agglomerations DF_CSD census subdivisions (municipalities) DF_CT census tracts DF_DA dissemination areas DF_DPL designated places DF_ER economic regions DF_FED federal electoral districts (2013 Representation Order) DF_POPCNTR population centres <p> SDMX API CHEAT SHEET : The SDMX Technical Working Group has also published a two-page cheat sheet (PDF, 83 KB) that summarizes the main points of the SDMX 2.1 RESTful API. </p>"},{"location":"storage_ov/","title":"Storage Options","text":""},{"location":"storage_ov/#storage-options-overview","title":"Storage Options Overview","text":"<p>When working with your spatial data, you have several storage options to choose from. Each option has its own characteristics and benefits.</p> <ol> <li> <p>ArcGIS  ArcGIS provides a comprehensive storage solution for your spatial data. It offers a geodatabase, which is a container for organizing and managing your geographic data, including feature classes, tables, and relationships. Additionally, ArcGIS allows you to register your PostgreSQL schema as layers in the portal, enabling you to serve the data and build apps. </p> </li> <li> <p>PostgreSQL + PostGIS   PostgreSQL, together with the PostGIS extension, offers a powerful open-source database solution for spatial data. It provides advanced spatial capabilities, allowing you to store and query geospatial data efficiently. With the PostGIS extension, you can perform spatial operations and analyses directly within the database. PostgreSQL + PostGIS is a popular choice for organizations seeking a robust and scalable spatial database.</p> </li> <li> <p>Azure Blob  Azure Blob storage is a cloud-based object storage service provided by Microsoft Azure. It is suitable for storing large amounts of unstructured data, including files and documents. Azure Blob provides high scalability, durability, and availability, making it a reliable option for managing and accessing your non-geospatial data.  If you have geospatial data stored in Azure Blob, users will need to utilize Azure Storage Explorer to copy the data locally in order to access it.</p> </li> <li> <p>Field Filers  For internal users (Stat-Can Employees) Field Filers, offer a convenient way to store and share files within your project. They provide a simple and user-friendly approach for collaborative file management. Field Filers can be mounted to your DAS VM for ease-of-use.</p> </li> </ol> <p>Each storage option has its own advantages and considerations. Depending on your specific requirements and workflows, DAS can help choose the option that best suits your needs.</p>"},{"location":"storage_ov/#arcgis-vs-postgresql","title":"ArcGIS vs PostgreSQL","text":"Use Case ArcGIS Datastore PostgreSQL (with PostGIS) Integration with the ArcGIS platform Seamless integration with ArcGIS components Integration with additional configuration and setup (registering datastore) Simplicity and ease of setup Simplified deployment and management (user friendly) Requires knowledge and some technical expertise for customization Collaboration and sharing Native collaboration features within ArcGIS platform Allows for collaborative editing of geospatial data; limited sharing Performance optimization for ArcGIS services Optimized for serving data to ArcGIS services Performance optimization may require additional fine-tuning Advanced spatial analysis and querying Interoperability with ArcGIS Pro Advanced spatial capabilities and SQL-based querying Customization and control over the database Flexible database management with additional spatial functionality Integration with external systems and applications Integration via REST or Python API Integration with various external systems and tools <p>Using a PostgreSQL database (with or without) registered ArcGIS layers is recommended when you have specific requirements or preferences for managing and accessing your geospatial data. It offers more flexibility and control over your data storage and allows you to leverage the advanced capabilities of PostgreSQL, such as spatial extensions like PostGIS for performing advanced spatial analysis, including routing. Additionally, using a PostgreSQL database allows you to integrate with other applications and systems that interact directly with the database. </p> <p>On the other hand, using ArcGIS Server as a datastore is suitable when you prefer a streamlined and integrated solution within the ArcGIS ecosystem, with simplified data management and administration through ArcGIS tools and workflows.</p> <p>Ultimately, the best approach depends on your specific project, data requirements, integration needs, and organizational preferences. It is recommended to evaluate these factors and consult with DAS-GAE and IT database experts to determine the most suitable approach for your situation.</p> <p>Warning</p> <p>It is up to the user to ensure that incoming data has been OPMIC approved. </p>"},{"location":"vis_ov/","title":"Visualizations","text":""},{"location":"vis_ov/#why-create-visuals","title":"Why create visuals","text":"<p>Geospatial visualization is a technique used to represent and analyze geographic data visually. It combines geospatial information with graphical elements to create maps, charts, and other visual representations that help understand patterns, relationships, and trends in the data. Many times maps convey information more effectively and intuitively than tables alone, providing more context, highlighting patterns and relationships, allowing consumer to engage interactively with the findings, and, communicate complex information for decision-makers.</p> <p>These powerful tools are used to create and share geospatial content, ranging from interactive narratives and immersive web experiences to customizable web applications and dedicated sites. They contribute to effective communication, data dissemination, and engagement with geospatial information.</p>"},{"location":"vis_ov/#licensed-tools","title":"Licensed Tools","text":""},{"location":"vis_ov/#arcgis-maps","title":"ArcGIS Maps","text":"<p>ArcGIS Mapping and Cartography: Mapping is a fundamental component of geospatial visualization. It involves the creation of maps that depict spatial data and their attributes. Cartography focuses on designing and presenting maps effectively, considering visual elements like colors, symbols, labels, and scales.  Mapping techniques can include:</p> <ul> <li>choropleth maps, which use color gradients to represent data values within predefined regions; </li> <li>heat maps, which display data density using color intensity; </li> <li>proportional symbols, where the size of symbols represents data magnitude;</li> <li>flow maps, which show the movement of objects or phenomena between locations.</li> </ul>"},{"location":"vis_ov/#arcgis-apps","title":"ArcGIS Apps","text":"<p>ArcGIS Applications: Intuitive, interactive web applications can be created on DAS without writing code! ArcGIS Portal (Enterprise) provides drag-and-drop interfaces for building custom web apps including Story Maps, Applications and Geo-Websites.  Generally, users start with creating a web-map then design and develop customized applications by combining widgets, themes, and layouts.</p>"},{"location":"vis_ov/#open-source-tools","title":"Open-Source Tools","text":""},{"location":"vis_ov/#qgis","title":"QGIS","text":"<p>QGIS Mapping and Cartography: Mapping and cartography in QGIS involve the creation and design of visually appealing and informative maps to represent spatial data. Here are some techniques commonly used in QGIS for mapping and cartography:</p> <ul> <li> <p>Choropleth Maps: Choropleth maps use different colors or shading to represent data values within predefined regions. This technique allows you to visualize patterns and variations in data across different areas.</p> </li> <li> <p>Heat Maps: Heat maps display data density or concentration using color intensity. They are particularly useful for visualizing the distribution and intensity of phenomena like population density, crime rates, or environmental factors.</p> </li> <li> <p>Proportional Symbols: Proportional symbols use different-sized symbols or markers to represent data magnitudes or quantities. This technique allows you to visually compare values or quantities across locations.</p> </li> <li> <p>Flow Maps: Flow maps visualize the movement of objects, phenomena, or relationships between locations. They use lines or arrows to represent the flow or direction, with varying widths or intensities to indicate the magnitude or volume of the flow.</p> </li> <li> <p>Labeling and Annotation: QGIS provides options to label features on the map, allowing you to display attribute information or customize the appearance of labels. You can adjust placement, font styles, sizes, and formatting to enhance readability and clarity.</p> </li> <li> <p>Layout Design: QGIS offers a map composer feature that enables you to design the layout of your map. You can arrange map elements, add legends, scale bars, north arrows, and text boxes. This allows you to create visually appealing and well-organized map layouts for presentations or printing.</p> </li> </ul>"},{"location":"vis_ov/#open-source-notebooks","title":"Open-Source Notebooks*","text":"<p>Creating geospatial visuals in Jupyter Notebooks is a popular approach among data scientists and geospatial analysts. Jupyter Notebooks provide an interactive environment that combines code execution, data exploration, and visualizations in a single document. Several common packages are used for geospatial data processing and visualization within Jupyter Notebooks. </p> <p>Popular python packages for visualizations include (but not limited too):</p> <ul> <li>Geopandas</li> <li>Matplotlib</li> <li>Folium</li> <li>Cartopy</li> <li>Seaborn</li> <li>Plotly</li> </ul>"},{"location":"vm/","title":"About GEA Virtual Machines","text":"<p>A DAS-GEA Virtual Machine can be created for you. </p> The standard GEA VMs include the following: <p>Hardware:</p> <ul> <li>4vcpus, 14GiB Memory (larger specs available)</li> <li>AMD Radeon Instinct MI25 GPU</li> <li>Managed storage</li> <li>learn more- Microsoft</li> </ul> <p>Software:</p> <ul> <li>ArcGIS Pro (BYO-license) </li> <li>QGIS </li> <li>Conda (via miniforge)</li> <li>Python IDEs (pyCharm, VSCode, Jupyter)</li> <li>&amp; resources identified during your Project Onboarding.</li> </ul> Virtual Machines on AAW and CAE <p>Depending on your project, you may have the ability to create a standard virtual machine via the CAE, or create a workspace in the AAW. These self-serve VMs are NOT optimized for geospatial rendering.</p>"},{"location":"vm/#external-non-statcan-users","title":"External (non-StatCan) Users:","text":"Connecting to your VM <ol> <li> <p>Visit the following link: Data Analytics Services Portal</p> </li> <li> <p>In the top right, select Sign In</p> <p></p> </li> <li> <p>Follow the prompts on the pop-up window to sign-in</p> </li> <li> <p>Scroll down, and your DAS VM will be listed</p> </li> <li> <p>Use the interface to Start, Connect, then Stop your VM</p> </li> </ol> <p>Virtual machines incur costs while they are running.   You should shut down your virtual machine when not in use to prevent unnecessary charges.   Your VM has an automatic shut-down time of 7pm CST.</p> Requesting changes to your VM <p>Contact: statcan.dassupport-soutiendelads.statcan@statcan.gc.ca</p> <p>Information to include:</p> <pre><code>- Your @ext.statcan.ca account name\n- Your UCID (if known)\n- Your request with a short explanation\n</code></pre> <p>Some Common requests:</p> <pre><code>- I need my password reset\n- I would like to upscale/downscale my VM\n- I need additional/updated software\n- I would like to modify the auto-start and/or auto-stop\n- I am encountering an error and need assistance\n</code></pre>"},{"location":"vm/#internal-statcan-users","title":"Internal (StatCan) Users:","text":"AVD vs DAS VM <p>DAS has been carefully designed to enable users to utilize their AVDs (Azure Virtual Desktops) to access DAS-GAE services. In the majority of cases, AVD will fulfill your requirements and provide the necessary capabilities for your data analysis needs.</p> <p>Reasons to request a DAS VM:</p> <p>1- Increased Computing Power: DAS VMs provide an advantage when users require high-capacity virtual machines that exceed what AVD can offer. In such cases, users can also exert some control over scaling by leveraging self-service options.</p> <p>2- Automated Tasks: DAS VMs can be configured to AutoStart, enabling users to automate tasks using the Microsoft Task Manager. This feature streamlines repetitive processes and enhances productivity. I need this process to run every Monday at 6am</p> <p>3- Software Availability: DAS VMs may offer software that is unavailable on AVD. Presently, we provide more up-to-date versions of software such as ArcPro, QGIS, and pgAdmin, enabling users to leverage the latest features and enhancements.</p> Finding &amp; Claiming a VM <ol> <li> <p>Access Azure Portal URL from OZ (do NOT use your AVD unless for a specific reason!)     https://portal.azure.com/#home</p> </li> <li> <p>Select More Services, and filter/search for DevTest Labs </p> </li> <li> <p>Change the Subscriptions filter to: ALL  or DAaaS</p> <p>Select geop-prod-intuser-dtl</p> <p> </p> </li> <li> <p>On the left menu panel, select: Claimable virtual machines</p> <p> </p> </li> <li> <p>Locate and select your VM. Your VM will be named: projectAccroymn-statcanID</p> <p>ex: gae-namenick</p> <p> </p> </li> <li> <p>In the VM overview page, select Claim machine</p> <p> </p> </li> <li> <p>Claiming will take a few minutes. Wait for the \u2018Successfully claimed\u2019 message before proceeding.      </p> </li> <li> <p>Select Browser connect. A new panel will open on the right.</p> <p>Enter your username: StatCanID (ex: namenick)</p> <p>Enter the temp password: (provided via onboarding email)</p> <p>Select Connect</p> <p> </p> </li> </ol> Disable pop-up blockers <p>After attempting to login for the first time, an error may appear that a popup blocker is preventing a new window to open. To disable it, an icon will pop up on the browser's search bar, select the button and click always allow.  </p> Starting &amp; Connecting to your VM <ol> <li> <p>Access Azure Portal url from OZ (do NOT use your AVD unless for a specific reason! see Tips section below):</p> <p>https://portal.azure.com/#home</p> <p>Select DevTe3st Labs from \"My Recent Resources\"</p> <p>Select your VM</p> <p>From the VM Overview page, click on the Start button.  </p> <p> </p> </li> </ol> <p>It takes a few minutes for your VM to start up. Monitor its start-up progress by selecting the Notifications icon at the top right of the window.   </p> <p>Connect to a VM:</p> <ol> <li> <p>After staring wait for the success notification (this can take a few minutes)</p> </li> <li> <ul> <li>From the Overview page for your VM, click on the Browser connect button         </li> </ul> </li> <li> <p>Ensure the Open in new window checkbox is selected, enter the Username and Password, and click on the Connect button. Your VM should open in a new browser tab.</p> </li> </ol> <p>Virtual machines incur costs while they are running.   You should shut down your virtual machine when not in use to prevent unnecessary charges.   Your VM has an automatic shut-down time of 7pm CST.</p> Stop your VM <ol> <li> <p>From the Overview page for your VM, click on the Stop button.  </p> <p> </p> </li> </ol> Resize your VM (self-serve) <p>Users have the ability to re-size their VMs to conserve resources(costs) or increase performance.</p> <ol> <li> <p>From the VMs overview page, select Size in the left-menu bar </p> </li> <li> <p>Select the desired size, then click Select at the bottom of the window </p> </li> </ol> <p>If you require different specs from the VMs listed, submit a technical support ticket to DAS-GAE</p>"},{"location":"vm/#errors-and-tips","title":"Errors and Tips","text":"Common Errors, Fixes, and, Tips Error Solution Your VM is still starting; wait a minute and try again You likely entered the VM username or password incorrectly, try again. You are experiencing some network latency; this usually resolves itself. If not, try restarting your VM Tips <p> Do NOT use AVD to connect to a VM. AVD is also a Azure Cloud VM so you are only increasing resource costs, only use AVD if you have a specific reason.</p> <p> Visit the Knowledge Centre for help on configuring Python libraries and packages</p> <p> Using keyboard shortcuts while connected to a VM may not result in the same action as expected. (i.e. ctrl + z will close your main browser window, not the VM browser window)</p> <p> VMs have an auto-shutdown time of 7pm cst. (this can be adjusted upon request: FAQ</p> <p> Moving the taskbar to the top or side of the VM might help differentiate between your OZ-PC and VM workspace.</p> <p> Multi-screens? You can not alter the VMs display settings, however there is a way to almost use multiple monitors. Use the Restore Down   button in your browser window and then drag to resize the window across multiple displays to get a multi-screen effect.  You may need to adjust some configurations in your OZ-Laptop display settings.</p> <p> By default, the Ubuntu virtual machine opens in Terminal mode. You can access the GUI of your Ubuntu machine from a Windows machine using X2Go.</p>"}]}